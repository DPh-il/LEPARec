[
    {
        "concept_name": "Java解释程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "解释执行Java字节码的程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Java interpreter"
        }
    },
    {
        "concept_name": "LALR(1)语法分析器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种从左向右扫描输入串及自底向上归约的确定性语法分析器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "LALR(1) parser"
        }
    },
    {
        "concept_name": "yacc编译器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "yet another compiler compiler ;yacc",
            "定义": "一种用来生成编译器的编译器。它接受文法以及和文法规则相联系的动作作为输入，生成能分析该文法所描述语言的语法分析程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "yet another compiler compiler"
        }
    },
    {
        "concept_name": "一遍编译器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "通过一遍扫描即可完成编译的编译器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "one-pass compiler"
        }
    },
    {
        "concept_name": "中间代码",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 中间语言(intermediate language)",
            "定义": "源程序的一种内部数据结构表示，其复杂性介于源程序语言和机器语言之间，易于翻译成目标代码。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "intermediate code"
        }
    },
    {
        "concept_name": "中间表示",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "intermediate representation ;IR",
            "定义": "语法分析后到生成目标代码之间的源程序表现形式。即中间代码。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "intermediate representation"
        }
    },
    {
        "concept_name": "互操作",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "不同程序、对象或构件之间相互交换信息和协同工作。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "interoperation"
        }
    },
    {
        "concept_name": "交互式语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "支持用户与数据处理系统之间以会话方式通信的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "interactive language"
        }
    },
    {
        "concept_name": "代数语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种允许构建类似于代数表达式语句的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic language"
        }
    },
    {
        "concept_name": "代码优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "编译程序为了生成高质量的目标代码，针对目标代码或中间代码所做的处理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "code optimization"
        }
    },
    {
        "concept_name": "代码生成阶段中间表示",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "code generation intermediate representation ;code generation IR",
            "定义": "在代码生成阶段编译器采用的中间代码表达形式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "code generation intermediate representation"
        }
    },
    {
        "concept_name": "优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "为提高程序执行效率对程序源代码或中间代码进行等价变换的方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "optimization"
        }
    },
    {
        "concept_name": "优化编译器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "采用了多种优化方法的编译器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "optimizing compiler"
        }
    },
    {
        "concept_name": "全局优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "通常指局限在一个函数内的涉及多个基本块的优化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "global optimization"
        }
    },
    {
        "concept_name": "公共子表达式删除",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "通过删除运算中等价子表达式的一种代码优化方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "common subexpression elimination"
        }
    },
    {
        "concept_name": "关键词",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 关键字",
            "定义": "计算机语言里事先定义的、有特别意义的标识符。大多数计算机语言关键词为保留词，但有的不是，如“FORTRAN”语言和“PL、I”语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "keyword"
        }
    },
    {
        "concept_name": "内存垃圾收集器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "程序运行时自动回收那些不再被程序访问的对象空间的内存管理机制。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "garbage collector"
        }
    },
    {
        "concept_name": "内联",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "将指定的函数体插入并取代每一处调用该函数的地方。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "inlining"
        }
    },
    {
        "concept_name": "写作语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 创作语言",
            "定义": "用于开发计算机辅助教学课件的高级程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "authoring language"
        }
    },
    {
        "concept_name": "动态分配",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在程序运行阶段进行的内存空间分配。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dynamic allocation"
        }
    },
    {
        "concept_name": "动态绑定",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在程序执行期间进行绑定的行为。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dynamic binding"
        }
    },
    {
        "concept_name": "动态连接库",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "可由多个进程同时调用的包含多个已被编译和连接的函数代码组成的库。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dynamic linked library"
        }
    },
    {
        "concept_name": "即时编译器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在程序运行过程中，即时地将源程序或中间代码编译为目标代码，并执行该目标代码的一种编译器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "just-in-time compiler"
        }
    },
    {
        "concept_name": "反汇编",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "将已汇编的计算机程序从机器代码转换为汇编语言程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "disassemble"
        }
    },
    {
        "concept_name": "可扩展标记语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种使用简单标记来描述数据的脚本语言。它把页面的内容和展示分离，标记不同类型的内容，然后使用样式表这样的技术确定如何把内容展示出来，是处理结构化文档的有力工具。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "extensible markup language"
        }
    },
    {
        "concept_name": "可扩展超文本标记语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "W3C推出的一种万维网页面格式化语言。是与XML完全兼容的超文本标记语言的扩展版本，混合使用了HTML和XML两种标准。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "extensible hypertext markup language"
        }
    },
    {
        "concept_name": "命令语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "计算机系统向用户提供的一种交互操作的语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "command language"
        }
    },
    {
        "concept_name": "四元组",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "编译常用的中间语言形式之一。由操作码、源操作数、目的操作数和操作结果四部分组成。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "quadruple"
        }
    },
    {
        "concept_name": "增量编译",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "增量地处理源程序代码中的变化，避免重复进行针对整个程序的完全编译。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "incremental compilation"
        }
    },
    {
        "concept_name": "多遍分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "超过两遍的分析方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "multi-pass analysis"
        }
    },
    {
        "concept_name": "头文件",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "包含类、子程序、变量和其他标识符声明等的源程序文件。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "header file"
        }
    },
    {
        "concept_name": "字面常量",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种常量。由其表示就可以得知它的值和类型。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "literal constant"
        }
    },
    {
        "concept_name": "存储分配",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "对计算机程序使用的内存进行分配。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "storage allocation"
        }
    },
    {
        "concept_name": "定义性出现",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "变量在声明语句中出现，编译时应为该变量分配存储空间。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "definitional occurrence"
        }
    },
    {
        "concept_name": "实参",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在调用子程序时，传输给该子程序形式参数的数值、变量或表达式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "actual parameter"
        }
    },
    {
        "concept_name": "寄存器分配",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "指定变量所存放的寄存器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "register allocation"
        }
    },
    {
        "concept_name": "局部优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "局限于程序基本块范围内的一种优化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "local optimization"
        }
    },
    {
        "concept_name": "左值",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "程序设计语言中赋值号左边的变量。表示该变量的存储位置值。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "L-value"
        }
    },
    {
        "concept_name": "平均查找长度",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "average search length ;ASL",
            "定义": "为确定元素在查找表中的位置，需要和该元素进行比较操作的次数的平均值。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "average search length"
        }
    },
    {
        "concept_name": "并行编译优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "针对并行编译进行的优化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel compiling optimization"
        }
    },
    {
        "concept_name": "并行编译程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "对并行语言进行编译的程序，或能够对串行语言自动进行程序并行化的编译程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallelizing compiler"
        }
    },
    {
        "concept_name": "应用程序接口",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "application program interface ;API",
            "定义": "一组预定义的函数或过程。使开发的应用程序能在无需提供源代码的情况下访问系统提供的功能。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "application program interface"
        }
    },
    {
        "concept_name": "强类型语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "所有变量都必须先定义后使用，并严格按照定义类型使用的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "strongly typed language"
        }
    },
    {
        "concept_name": "归纳变量",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "循环中的一个变量，其值在每一次循环迭代过程中增加（或减少）固定的值。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "induction variable"
        }
    },
    {
        "concept_name": "归纳表达式",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "循环中具有形式的表达式。其中i是归纳变量，是循环不变式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "induction expression"
        }
    },
    {
        "concept_name": "循环不变式",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在循环的迭代中不随循环变量变化的式子。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "loop invariant"
        }
    },
    {
        "concept_name": "循环优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "针对循环语句进行的优化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "loop optimization"
        }
    },
    {
        "concept_name": "快速词法分析器生成器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "fast lexical analyzer generator ;flex",
            "定义": "一种能生成词法分析程序的自由软件。可替代UNIX操作系统中的Lex词法分析器生成器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "fast lexical analyzer generator"
        }
    },
    {
        "concept_name": "扩展巴克斯-诺尔范式",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 扩展巴克斯范式",
            "定义": "上下文无关文法的元语言巴克斯范式的扩展符号表示法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "extended Backus-Naur form"
        }
    },
    {
        "concept_name": "抽象机",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "过程或机器的一种抽象表示，计算机软件或硬件系统的理论模型。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "abstract machine"
        }
    },
    {
        "concept_name": "抽象语法树",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "与抽象文法相对应的派生树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "abstract syntax tree"
        }
    },
    {
        "concept_name": "按值调用",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "简称": " 值调用",
            "又称": " 传值",
            "定义": "一种传送参数的方法。调用模块向被调用模块提供要传送参数的实际值。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "call by value"
        }
    },
    {
        "concept_name": "控制流分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种分析程序控制流的静态代码分析技术。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "control flow analysis"
        }
    },
    {
        "concept_name": "操作符重载",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "赋予操作符多于一种含义。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "operator overloading"
        }
    },
    {
        "concept_name": "数据封装",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在面向对象语言中，将一组数据和在这些数据上的操作隔离在一个类内，只能通过其成员或者友元访问的技术。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data encapsulation",
            "prerequisite": [
                "K_开放系统互连_计算机科学技术",
                "K_最大传输单元_计算机科学技术",
                "K_服务器_计算机科学技术",
                "K_进程间通信_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "数据并行程序设计语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "支持源集合或数组中的元素同时执行相同操作的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data parallel programming language"
        }
    },
    {
        "concept_name": "数据流分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "获取数据沿着程序执行路径变化的相关信息的程序分析方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dataflow analysis"
        }
    },
    {
        "concept_name": "数据类型",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "程序中对数据的分类。包括一个值的集合以及定义在这个值集上的一组操作。例如，字符型、整型、实型、枚举型等。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data type",
            "prerequisite": [
                "K_数据传送_计算机科学技术",
                "K_码元_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "文本编辑程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 正文编辑器",
            "定义": "可对文件内容以字符、文字为单位进行增加、删除、修改等操作的程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "text editor"
        }
    },
    {
        "concept_name": "服务数据对象",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "service data object ;SDO",
            "定义": "一种面向服务的数据操作技术。提供对各类异构数据源统一访问机制。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "service data object"
        }
    },
    {
        "concept_name": "标记语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种通过在原始文本中插入过程性和描述性的标志，而将其变换为结构式文档的语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "markup language"
        }
    },
    {
        "concept_name": "标识符",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "用来命名语言实体的标记。包括变量、类型、标签、子程序和包等的名字。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "identifier"
        }
    },
    {
        "concept_name": "栈分配",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "针对数据进行的系统内堆栈的分配。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "stack allocation"
        }
    },
    {
        "concept_name": "死代码删除",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "消除永远不会被执行的语句的一种优化方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dead code elimination"
        }
    },
    {
        "concept_name": "汇编程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 汇编器",
            "定义": "把汇编语言程序转换为等效的机器语言程序的计算机软件。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "assembler"
        }
    },
    {
        "concept_name": "汇编语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "对操作、存储部位和其他特征（例如宏指令）提供符号命名的面向机器的语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "assembly language"
        }
    },
    {
        "concept_name": "源程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "使用某种程序设计语言编写，能被特定编译器接受的程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "source program"
        }
    },
    {
        "concept_name": "目标代码",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "由汇编程序或编译程序输出的计算机指令代码。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "object code"
        }
    },
    {
        "concept_name": "目标程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "已完成编译或汇编的程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "object program"
        }
    },
    {
        "concept_name": "移进-归约算法",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "通过重复查找当前句型的句柄（最左简单短语），并使用规则把它归约成相应的非终极符号来进行语法分析的方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "shift-reduce algorithms"
        }
    },
    {
        "concept_name": "程序理解",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "从源程序提取相关必要信息的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "program understanding"
        }
    },
    {
        "concept_name": "窥孔优化",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "考察一小段目标指令（称为窥孔）并替换为更短和更快的一段指令的一种优化方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "peephole optimization"
        }
    },
    {
        "concept_name": "符号分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "对符号中蕴含的语义进行分析的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "symbolic analysis"
        }
    },
    {
        "concept_name": "简单短语",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "给定文法 G［Z］，设为该文法的句型，若U =、 u，则u是句型w相对于U 的简单短语。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "simple phrase"
        }
    },
    {
        "concept_name": "算法语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "为处理算法而设计的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algorithmic language"
        }
    },
    {
        "concept_name": "算符优先分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "利用算符优先关系来分析一个句子是否符合该文法定义的语法分析过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "operator precedence parsing"
        }
    },
    {
        "concept_name": "算符优先文法",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "任一对终极符之间的优先关系最多只满足、，=，、中的一种的算符文法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "operator precedence grammar"
        }
    },
    {
        "concept_name": "算符文法",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "文法的任一产生式的右部都不含两个相继的非终极符的文法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "operator grammar"
        }
    },
    {
        "concept_name": "绑定",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "把一个值或指定的对象赋给某一标识符的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binding"
        }
    },
    {
        "concept_name": "继承属性",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "语法分析树上的非终极符结点通过其父结点上的产生式所关联的语义规则来定义的属性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "inherited attribute"
        }
    },
    {
        "concept_name": "综合",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在语法树中，对属性自底向上进行求值的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "synthesis"
        }
    },
    {
        "concept_name": "综合属性",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "语法分析树结点上的一类属性。其值由该结点本身属性值及其子结点属性值确定。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "synthesized attribute"
        }
    },
    {
        "concept_name": "翻译程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 翻译器",
            "定义": "将某一程序设计语言的程序转换为等价的另一程序设计语言程序的程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "translating program"
        }
    },
    {
        "concept_name": "自底向上语法分析器",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种语法分析器，先分析最基础的语法结构单元，进而分析高层语法结构的语法分析器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "bottom-up parser"
        }
    },
    {
        "concept_name": "解释程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 解释器",
            "定义": "逐条翻译和执行每一条程序语句的计算机程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "interpreter"
        }
    },
    {
        "concept_name": "词法分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "对构成源程序的字符流进行扫描并根据词法规则识别单词的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "lexical analysis"
        }
    },
    {
        "concept_name": "语义分析",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "根据上下文辨别计算机语言各个成分的确切含义，以发现语义错误。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "semantic analysis"
        }
    },
    {
        "concept_name": "语义树",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "程序语义以及语义之间的关系的树结构表示。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "semantic tree"
        }
    },
    {
        "concept_name": "语义错误",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "程序不符合语义规则或超越具体计算机系统限制的错误。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "semantic error"
        }
    },
    {
        "concept_name": "语法制导编辑程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "又称": " 语法制导编辑器",
            "定义": "以程序的语法结构为对象，实现结构引导的编辑操作。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "syntax-directed editor"
        }
    },
    {
        "concept_name": "语法错误",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "语言在结构上不符合语法的错误。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "syntax error"
        }
    },
    {
        "concept_name": "语用",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "向编译程序传递的程序与使用者关系的信息。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pragmatics"
        }
    },
    {
        "concept_name": "赋值语句",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "赋给变量一个具体的确定值的语句。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "assignment statement",
            "prerequisite": [
                "K_递归调用_计算机科学技术",
                "K_源程序_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "连接编辑程序",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "把多个分别编译或汇编过的程序段组合成一个程序段或程序的程序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linkage editor"
        }
    },
    {
        "concept_name": "递归调用",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "软件模块直接或间接调用它自己的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "recursive call"
        }
    },
    {
        "concept_name": "静态分配",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "在程序编译、连接阶段进行的内存空间分配。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "static allocation"
        }
    },
    {
        "concept_name": "面向对象程序设计语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "支持面向对象概念的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "object-oriented programming language"
        }
    },
    {
        "concept_name": "面向方面的程序设计语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "aspect-oriented programming language ;AOPL",
            "定义": "支持面向方面程序设计的语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "aspect-oriented programming language"
        }
    },
    {
        "concept_name": "面向智能体的程序设计语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "英文": "agent-oriented programming language ;AOPL",
            "定义": "基于智能体技术对多智能体系统进行程序设计的语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "agent-oriented programming language"
        }
    },
    {
        "concept_name": "面向机器的语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "为特定计算机体系结构设计的程序设计语言，如机器语言、汇编语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "machine-oriented language"
        }
    },
    {
        "concept_name": "面向过程的语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "简称": " 过程语言(procedure language)",
            "定义": "以特定语句或指令序列给出问题求解过程的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "procedure-oriented language"
        }
    },
    {
        "concept_name": "面向问题的语言",
        "details": {
            "学科": "计算机科学技术_系统软件_语言与编译",
            "定义": "一种反映特定领域各种概念并解决相应应用问题的程序设计语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "problem-oriented language"
        }
    }
]