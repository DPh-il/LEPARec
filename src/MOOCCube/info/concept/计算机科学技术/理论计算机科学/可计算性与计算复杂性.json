[
    {
        "concept_name": "#P类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定函数 f 、{0,1}、→N，如果存在一个多项式 p 和一个多项式时间图灵机 M ，使对任何x ∈{0,1}、、 f(x) =｜{y∈ ｜M(x,y)=1}｜，那么称f 属于#P。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "class #P"
        }
    },
    {
        "concept_name": "//完全集",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定自然数集合 A ，如果 A ∈，或，或，且对任何，，或集 X ，都有 XA 成立，那么称 A 是，，或完全集。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "//-complete set"
        }
    },
    {
        "concept_name": "1-1度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "定义等价关系， AB 当且仅当 AB ，且 BA 。一个1-1度即等价关系的一个等价类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "one-one degree"
        }
    },
    {
        "concept_name": "1-1归约于",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定自然数子集 A,B ，如果存在可计算单射 g 使对一切 x ， x∈A 当且仅当 g(x)∈B ，则称 A 1-1归约于 B ，记为 AB 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "one-one reducible to"
        }
    },
    {
        "concept_name": "AC类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "定义类似于，不同的是允许一个门可以有无界的入度。定义。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "class AC"
        }
    },
    {
        "concept_name": "P vs NP问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "多项式时间复杂性类对非确定性多项式时间复杂性类的问题，即是否P = NP的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "P vs NP problem"
        }
    },
    {
        "concept_name": "PSPACE完全性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "全称": " 多项式空间复杂性类完全性",
            "定义": "如果一个多项式空间可识别的语言 A 还满足条件：任意一个多项式空间识别的语言 X 均对数空间多一归约到 A ，则称 A 是多项式空间完全的。量词布尔公式的判定性问题QBF在对数空间多一归约下就是一个PSPACE完全问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "PSPACE-completeness"
        }
    },
    {
        "concept_name": "P完全问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "全称": " 多项式时间复杂性类完全问题",
            "定义": "如果一个问题 A是多项式时间可计算的，而且任何一个多项式时间可计算的问题均可在对数空间多一归约到A，则称A是一个 P完全问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "P-complete problem"
        }
    },
    {
        "concept_name": "RP,coRP类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "RTIME( g(n) )由所有可由某时间为 t(n) 的概率图灵机 M ，按以下方式判定的语言 L 构成的类：;②x∉L⇒Pr［ M(x) =1］=0。RP, coRP类分别定义为：。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "class RP"
        }
    },
    {
        "concept_name": "δ 接近/远离",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对有限域 F 上的两个函数 f,g ，定义 f,g 的距离为，即当一致地随机取 F 中的元素 x 时， f(x)≠g(x) 的概率。如果对某个 δ ﹥0有 d ( f,g )≤ δ ，则称 f 是 δ 接近 g ，否则称 f是δ远离g ，不关心具体的 δ 时简称 f远离g 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "δ -close/δ-far from"
        }
    },
    {
        "concept_name": "μ递归函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "由μ算子定义的递归函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "μ-recursive function"
        }
    },
    {
        "concept_name": "一致伪跃变算子问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "是否存在一个计算可枚举集合 W 使得对一切自然数子集 X,Y ，下面①和②同时成立：。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "uniform pseudo-jump operator problem"
        }
    },
    {
        "concept_name": "上半格",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果一个偏序 (P,) 满足条件：对任意 P 中的元素 x,y ，它们的最小上界在 P 中存在，则称该偏序为一个上半格。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "upper semi-lattice"
        }
    },
    {
        "concept_name": "不可判定问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "不存在一个算法在有穷时间内给出“是”或“否”答案的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "undecidable problem"
        }
    },
    {
        "concept_name": "不可预知性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "没有一个算法能够根据一个串的前 i 位来预测第 i +1位。令是拉长 l(n) 的多项式时间可计算函数，如果对每一个概率多项式时间算法 B ，存在可忽略函数 ε 、N→［0,1］，使得，那么称 G 是不可预知的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "unpredictability"
        }
    },
    {
        "concept_name": "不可预知性隐涵伪随机性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "姚期智于1982年提出的如下定理：令 l 、N→N和是多项式时间可计算函数，使得对每一个，｜ G(x) ｜= l(｜x｜) 。如果 G 是不可预知的，那么它是一个安全伪随机生成器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "unpredictability implies pseudorandomness"
        }
    },
    {
        "concept_name": "丘奇-图灵论题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "可计算性理论的基本论题：一个函数是可计算的当且仅当可由一部图灵机来计算它。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Church-Turing thesis"
        }
    },
    {
        "concept_name": "两两独立哈希函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "令是从到的函数类，如果对任何 x,x′∈,y,y′∈，当 x≠x ′时，必有成立，那么称是一个两两独立哈希函数。这里指 h 是中随机、均匀地选取的一个函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pairwise independent Hash functions"
        }
    },
    {
        "concept_name": "中国剩余定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "令表示模 n 的乘法群，中国剩余定理断言：对每一个，这里所有互素，同构于。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Chinese remainder theorem"
        }
    },
    {
        "concept_name": "交互式多项式时间复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "英文": "class of interactive polynomial time ;IP",
            "定义": "一个复杂性类，包含如下定义的语言：给定语言 L ，如果存在一个随机化多项式时间验证者 V ，它可以和任何证明者交互次，使得对任何 x ：①如果 x∈L ，那么存在证明者 P ，使得Pr［、 V, P 、接受 x ］=1；②如果 xL ，那么对任何证明者 P ，Pr［、 V,P 、接受x]、成立，那么我们称 L 属于交互式多项式时间复杂性类，记为 L ∈IP。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "class of interactive polynomial time"
        }
    },
    {
        "concept_name": "交互式多项式时间等于多项式空间问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "英文": "interactive polynormial time equals polynomial space problem ;IP=PSPACE problem",
            "定义": "判断交互式多项式时间计算复杂性是否等于多项式空间计算复杂性的问题，该问题由沙米尔（Shamir）在1990年给出了肯定的证明，即IP = PSPACE。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "interactive polynormial time equals polynomial space problem"
        }
    },
    {
        "concept_name": "交互式证明",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "又称": " 交互式协议(interactive protocol)",
            "定义": "定理证明的一种方式。一个交互式证明包含一个概率多项式时间验证者 V 和一个证明者 P ， P 试图说服 V 接受一个输入 x ， V 通过取个随机位，问 P个问题，来决定是否接受 x ，、 V,P 、( x )表示 V 最后的决定。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "interactive proofs"
        }
    },
    {
        "concept_name": "交替图灵机",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "类似于非确定型图灵机。按如下方式定义的计算模型：每一个转移函数有两个选择，每一个内部状态有一个标签或，中间格局由它的状态标签及下一个格局是否接受来确定，交替图灵机接受一个输入 x 当且仅当初始格局最终是可接受的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "alternating Turing machine"
        }
    },
    {
        "concept_name": "交替多项式时间复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在多项式时间内一切交替图灵机所接受的语言做成的类，记为AP。已经证明AP = PSPACE，即交替多项式时间复杂性类与多项式空间复杂性类相同。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "alternating polynomial time complexity class"
        }
    },
    {
        "concept_name": "交替对数空间复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "英文": "alternating logspace complexity class ;AL",
            "定义": "在对数空间交替图灵机所接受的语言做成的类，记为AL。已经证明AL = P，即交替对数空间复杂性类与多项式时间复杂性类相同。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "alternating logspace complexity class"
        }
    },
    {
        "concept_name": "交替时间复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "交替图灵机的时间复杂性。令 M 是一个交替图灵机，对函数 t ∶N→N，称 M 是 t(n) 时间的交替图灵机，如果对每一个输入，和每一个转移函数的选择系列， M 都在 t(｜x｜) 步内停机。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "alternating time complexity"
        }
    },
    {
        "concept_name": "交替空间复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "交替图灵机的空间复杂性。令 M 是一个交替图灵机，对函数 s ∶N→N，称 M 是 s(n) 空间的交替图灵机，如果对任何输入，任何转移函数的选择系列， M 都在 s(｜x｜) 空间内停机。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "alternating space complexity"
        }
    },
    {
        "concept_name": "代数P/poly类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "由多项式大小的算术线路可计算的度数为多项式的多项式所组成的类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic P/poly"
        }
    },
    {
        "concept_name": "代数复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在数值计算或代数计算模型中，用所使用的代数运算的次数来定义的复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic complexity"
        }
    },
    {
        "concept_name": "代数性质检测",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对如下问题的检测：刻画代数性质 P ，它存在一个局部检测算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic property test"
        }
    },
    {
        "concept_name": "代数线路",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "域上的一个代数线路是一个有向无圈图，输入节点标记为，取值于某数域，有两个特殊节点：1或0（域元素）。每一个内部节点称为一个门，标记为一个算术运算，加（+）或乘（×），每一个门的入度为2，有一个输出节点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic circuit"
        }
    },
    {
        "concept_name": "代数计算树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "节点形式如下的二叉树：①叶子节点为“1”或“0”；②计算节点 v 标注为，这里对某 u ， w ,算子∈{+,－,×,÷}；③有出度2的分支节点，分支取决于判定条件≥0或＜0。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic computation tree"
        }
    },
    {
        "concept_name": "代数计算树复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "令， W 的代数计算树复杂性为一切计算 W 的代数计算树的最小深度，这里R为实数域。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algebraic computation tree complexity"
        }
    },
    {
        "concept_name": "优先树方法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "设计构造安排策略树上的策略工作的方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "priority tree method"
        }
    },
    {
        "concept_name": "伪跃变算子",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一个编码 e ，对于任意自然数集合 A ，把 A 对应到的定义域的算子，其中是编码为 e 的图灵机相对于 A 的计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pseudo jump operator"
        }
    },
    {
        "concept_name": "低次多项式检测",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "检测一个函数是一个低次多项式，还是远离一切低次多项式的交互式检测算法。其基本原理是代数基本定理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "low degree test"
        }
    },
    {
        "concept_name": "使用函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个带某谕示带的图灵机对每一个输入 x 的计算所用到的谕示带上的最大数，记为 u(x) 。这时称 u(x) 是该谕示图灵计算的使用函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "use function"
        }
    },
    {
        "concept_name": "使用原理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个带某谕示带的图灵机，对一个输入 x 的计算只跟谕示带上在其使用函数以内的信息有关。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "use principle"
        }
    },
    {
        "concept_name": "偏序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一个集合 P ，确定一个关系 xy ，满足下面三个条件、 ①自反性；②反对称性；③传递性。允许其中有不可比的对。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "partial ordering"
        }
    },
    {
        "concept_name": "停机问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "判断一个程序是否会在有限时间之内终止的问题。假设是一切图灵机的一个可计算枚举，是分别由计算的函数。停机问题定义为。它是一个计算可枚举集合，但不是递归集，正是后者说明停机问题不可判定。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "halting problem"
        }
    },
    {
        "concept_name": "允许方法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "构造计算可枚举集合 X ，使 X 图灵归约于某给定的计算可枚举集 A 的一般方法，要求构造可计算函数 f ，使对任何 x,s ，如果 x 在步 s 进入 X ，则必有某 y≤f(x) 在步 s 同时进入 A ，即 X 的枚举须得到 A 的允许，从而保证 XA 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "permitting method"
        }
    },
    {
        "concept_name": "全息算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "瓦利安特（Valiant）于2004年提出的基于多项式插值方法建立的保持解数目相等的归约方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "holographic algorithm"
        }
    },
    {
        "concept_name": "公开密钥交互式协议",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个特殊的交互式证明，特征的是验证者 V 所取的随机串也向证明者 P 提供，这时的协议就是公开密钥交互式协议。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "public-coin interactive protocol"
        }
    },
    {
        "concept_name": "公理复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "时间和空间只是计算的“复杂性测度”的两个例子，一般可定义复杂性测度为满足一定公理的函数（可以是部分函数），这样的复杂性称为公理复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "axiomatic complexity"
        }
    },
    {
        "concept_name": "典型序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "某种自然顺序，例如一个自然数的子集合 A 可以按其成员从小到大排列的顺序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "canonical order"
        }
    },
    {
        "concept_name": "函数图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定函数 ψ ，记 ψ 的图为graph ψ ，定义为、 (x,y) ∈graph ψ 当且仅当 ψ(x)=y 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "graph of a function"
        }
    },
    {
        "concept_name": "函数问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "输出结果为某函数的值的问题，而非简单的0或1。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "function problem"
        }
    },
    {
        "concept_name": "列举解码",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "列举解码允许当Δ( y,E(x) )很大时，列举一个很短的可能候选者，使得其中之一是 x 的概率很大。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "list decoding"
        }
    },
    {
        "concept_name": "初始格局",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "图灵机对某输入 x 在开始计算时的格局。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "initial configuration"
        }
    },
    {
        "concept_name": "初等等价的",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果两个结构有相同的基本理论，则称它们是初等等价的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "elementary equivalent"
        }
    },
    {
        "concept_name": "判定树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在计算复杂性和通信复杂性理论中，决策树模型是一个计算或通信的模型，在其中一个算法或通信过程被看作一个基本的决策树，即基于比较的一个分支操作的系列，这些比较被指定为计算代价的单元。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "decision tree"
        }
    },
    {
        "concept_name": "剪枝",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指在树（或其他结构）上搜索时把那些已证明不是解的节点一整枝地剪去，以减小（指数地减少）搜索范围。只有少量问题有此类算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pruning"
        }
    },
    {
        "concept_name": "力迫论证",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "这是集合论中的力迫方法在可计算性中的应用，它被广泛应用于可计算性理论。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "forcing argument"
        }
    },
    {
        "concept_name": "单值化定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果二元关系是一个计算可枚举关系，那么存在一个部分可计算函数 ψ 使得对任意 x ， ψ(x) 收敛当且仅当 (y)R(x,y) ，这里 N 是自然数集。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "uniformization theorem"
        }
    },
    {
        "concept_name": "单向函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定函数，如果 f 是多项式时间可计算的，并且对每一个概率多项式时间算法 A ，都存在可忽略函数 ε 、N→［0,1］，使得对每一个 n ，都有，这里 ε 是可忽略函数，指对任意正常数 c 及充分大的 n ，有。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "one-way function",
            "prerequisite": [
                "K_消息鉴别码_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "单向函数猜想",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "断言存在单向函数的猜想。其中单向函数指的是对任何一个输入，计算都容易；但是至少存在一个输出，使得反向计算不容易的函数。此处“容易”和“不容易”通常理解为多项式复杂性和指数复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "one-way function conjecture"
        }
    },
    {
        "concept_name": "单调线路",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在其中没有否定门出现的线路。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "monotone circuit"
        }
    },
    {
        "concept_name": "单边错误",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一种随机算法，判定一个语言时，对正（或负）实例没有错误，只可能有负（或正）实例中的一方有错误。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "one-sided error"
        }
    },
    {
        "concept_name": "原始递归函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "包括后继函数、常函数和投影函数在内的在函数复合算子和原始递归算子下封闭的，其变元和值皆为自然数的最小函数类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "primitive recursive function"
        }
    },
    {
        "concept_name": "原始递归谓词",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果一个谓词所确定的集合是原始递归的，则称它是原始递归谓词。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "primitive recursive predicate"
        }
    },
    {
        "concept_name": "反演跃变",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "图灵跃变算子的逆算子。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "inverting the jump"
        }
    },
    {
        "concept_name": "可判定问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "存在一个算法在有穷时间内给出“是”或“否”答案的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "decidable problem"
        }
    },
    {
        "concept_name": "可忽略函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一个函数 ε 、N→［0,1］，如果 ε(n) =，即对每一个常数 c 及充分大的，均有，那么称 ε 是一个可忽略函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "negligible function"
        }
    },
    {
        "concept_name": "可接受配数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一切部分可计算一元函数的枚举（、），如果：① 每一个函数，如果在（、）中出现，则它在（、）中出现无穷次；而且②（、）满足 s－m－n 定理，那么称它是一个可接受配数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "acceptable numbering"
        }
    },
    {
        "concept_name": "可满足的",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果存在一组真值指派使一个逻辑表达式取值1（真），则称该逻辑表达式是可满足的，否则称它为不可满足的（unsatisfiable）。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "satisfiable"
        }
    },
    {
        "concept_name": "可能结局",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "为满足一个需求的策略的最终结局。由于一个需求对应一个图灵机，而一个图灵机计算一个部分函数，因此针对一个需求的策略的最终结局依赖于需求所对应的图灵机的规律。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "possible outcomes"
        }
    },
    {
        "concept_name": "可计算同构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定 A,BN，N是自然数集，如果存在可计算置换 p 使对一切 x,x∈A 当且仅当 p(x)∈B ，则称 A 可计算同构于 B 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "computably isomorphic"
        }
    },
    {
        "concept_name": "后继函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "加1的函数，即f(x)=x+1。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "successor function"
        }
    },
    {
        "concept_name": "哥德尔配数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一种编码方法。可以把符号及其推演系统对应到自然数集合的方法，并有可能解码，即由一个数利用算法恢复出它所对应的符号表达式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "GÖdel numbering"
        }
    },
    {
        "concept_name": "图灵可定义性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "图灵度结构中可定义的特殊子集。例如一切计算可枚举度在整个图灵度结构中是否可定义就是一个重要未解决问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Turing definability"
        }
    },
    {
        "concept_name": "基于单向函数的伪随机数生成器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果存在单向函数，那么对每一个 c∈N ，存在拉长 l(n)=的安全伪随机生成器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pseudorandom generators from one-way functions"
        }
    },
    {
        "concept_name": "基于单向置换的伪随机数生成器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "假设存在单向函数使得 f 是1-1的，而且对每一个 x ，｜ f(x) ｜=｜ x ｜，那么对每一个 c ，存在拉长的安全伪随机数生成器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pseudorandom generators form one-way permutations"
        }
    },
    {
        "concept_name": "基本理论",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对某一结构成立的一切真命题做成的集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "elementary theory"
        }
    },
    {
        "concept_name": "复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "时间复杂性或空间复杂性最多不超过某种标准的图灵可计算问题类。经典的复杂性类包括：P（确定性多项式时间类）、NP（非确定性多项式时间类）、PSPACE（确定性多项式空间类）、Logspace（确定性对数空间类）等。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "complexity class"
        }
    },
    {
        "concept_name": "复杂性类的完全语言",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对某复杂性类在多项式时间多一归约，或对数空间多一归约下的完全语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "complete language for complexity classes"
        }
    },
    {
        "concept_name": "多一度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定自然数集 A,B ，定义 AB 当且仅当 AB 且 BA 。这是一个等价关系，记为。一个多一度即某集合 A 在下的一个等价类，即 {B｜BA}。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "many-one degree"
        }
    },
    {
        "concept_name": "多一归约于",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定集合 A,BN， N是自然数集，如果存在可计算函数 f 使对一切 x ， x∈A 当且仅当 f(x)∈B ，则称 A 多一归约于 B ，记为 AB ，或 AB via f 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "many-one reducible to"
        }
    },
    {
        "concept_name": "多数投票制",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一种定义函数的方法，按取最大多数意见为函数值的方法进行，若有多个候选元具有相同的最大多数得票，则可在这些候选元中随机选取一个。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "majority voting"
        }
    },
    {
        "concept_name": "多方通信复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "假设有 k 方及函数，输入为，每一个，所有各方均知道 f ，而且对每一个 i ，第 i 方知道除以外的所有输入。通信计算要求最终所有各方均知道 f的值。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "multiparty communication complexity"
        }
    },
    {
        "concept_name": "多线性函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个多项式 f ，其中每一个单独变量 x 的度（即幂次）均为1。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "multilinear function"
        }
    },
    {
        "concept_name": "多线性检测",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个局部检测系统检查一个给定函数是多线性函数还是远离任何多线性函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "multilinearity test"
        }
    },
    {
        "concept_name": "多项式恒等检测",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "以隐含的形式给定整系数多项式 P ，如代数线路的形式。对于输入 x ，可以快速求出 P ( x )的值。多项式恒等检测指检测是否 P ( x )≡0的局部算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial identity testing"
        }
    },
    {
        "concept_name": "多项式时间图灵归约于",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定语言，如果存在谕示图灵机Φ使得多项式时间可计算的，那么称 X 多项式时间图灵归约于 Y ，这里是在Φ的谕示带上安装 Y 所得的计算，是 X 的特征函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial time Turing reducible to"
        }
    },
    {
        "concept_name": "多项式时间多一归约于",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定语言，如果存在多项式时间可计算函数 f ，使对一切 x ， x ∈ X 当且仅当 f(x) ∈ Y ，那么称 X 是多项式时间多一归约于 Y 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial time many-one reducible to"
        }
    },
    {
        "concept_name": "多项式时间层谱",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在确定性多项式时间类内部按多项式阶数的大小进一步划分子类，形成由这些子类构成的层次。例如表示确定性 k 阶多项式时间类，它们构成层次：。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial time hierarchy"
        }
    },
    {
        "concept_name": "多项式空间复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "确定型图灵机在空间，对所有 k 所接受的全体语言构成的类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial space complexity class"
        }
    },
    {
        "concept_name": "姚XOR定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "模2加会增大函数的平均情况困难性，确切地有：对每一个， δ ＞0, k ∈N,若，则，这里。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Yao's XOR theorem"
        }
    },
    {
        "concept_name": "字母表∑上的纠错码",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对有穷集∑和，定义。给定，如果对任意，若 x≠y ，则Δ( E(x),E(y) )≥ δ ，那么称是字母表∑上的距离为 δ 的纠错码。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "error correcting code over alphabet ∑"
        }
    },
    {
        "concept_name": "完全问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定问题 Q 和问题类 A ，如果 Q∈A , 而且在某种归约下，记为， A 中任何问题 X 均可归约到 Q ，即 XQ ，则称问题 Q 是问题类 A 中的完全问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "complete problem"
        }
    },
    {
        "concept_name": "对数空间多一归约于",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定语言，如果存在对数空间可计算函数 f 使得对一切 x ， x ∈ X 当且仅当 f(x) ∈ Y ，那么称 X 是对数空间多一归约于 Y 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "logarithmic space many-one reducible to"
        }
    },
    {
        "concept_name": "差层谱",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "又称": " 叶尔绍夫层谱",
            "定义": "利用可计算逼近的错误次数定义的层谱。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "difference hierarchy"
        }
    },
    {
        "concept_name": "布尔代数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个有序的四元组( B ,∧,∨, ┐)，其中∧，∨和 ┐是布尔运算，定义在非空集合 B 的元素上，构成一个代数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Boolean algebra"
        }
    },
    {
        "concept_name": "布尔公式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一种布尔表达式，可以表示为一个布尔线路使得其中每个门的出度都是1。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Boolean formula"
        }
    },
    {
        "concept_name": "布尔表达式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "包含0,1和一阶变量, 在布尔运算下归纳地构造出来的表达式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Boolean expression"
        }
    },
    {
        "concept_name": "布尔运算",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "逻辑演算中的二元运算∧，∨，和一元运算 ┐，分别表示and（与），or（或）和not（非）。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Boolean operation"
        }
    },
    {
        "concept_name": "带压缩",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "尽可能少地用一个带子上的格子，即压缩带上所用格子的数目。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "tape compression"
        }
    },
    {
        "concept_name": "带符号",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "带上除字母表外还可包含一些特殊符号起特殊作用，例如空格符等。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "tape symbol"
        }
    },
    {
        "concept_name": "平均复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对同一长度的一切输入的平均时间复杂性，或根据实际中某种分布的期望时间复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "average complexity"
        }
    },
    {
        "concept_name": "平均情况困难性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对和 ρ ∈［0,1］，定义 f 的 ρ -平均情况困难性，记为，为最大的 S 使得对任何大小不超过 S 的线路 C ，Pr［ C(x) = f(x) ］＜ ρ 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "average-case hardness"
        }
    },
    {
        "concept_name": "并定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "计算可枚举集合在集合并与交运算下是一致能行封闭的，即存在可计算函数 f,g 使得。这里是编码为 z 的图灵机计算的函数的定义域。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "union theorem"
        }
    },
    {
        "concept_name": "并算子",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定集合 A,BN，N是自然数集，定义并算子 A join B ，为{ 2x｜x∈A}∪{2y+1｜y∈B }，记为 A⊕B 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "join operator"
        }
    },
    {
        "concept_name": "并行随机存储器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个并行的能够随机访问内存的计算模型。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel random access machine"
        }
    },
    {
        "concept_name": "库克可归约性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "多项式时间图灵可归约性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Cook reducibility"
        }
    },
    {
        "concept_name": "形式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定集合A，如果存在可计算关系R使得对一切x，x∈A当且仅当)，则称 A 有形式，这里当 n 为偶数时,,否则是。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "-form"
        }
    },
    {
        "concept_name": "恒等函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "函数 f(x)=x 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "identity function"
        }
    },
    {
        "concept_name": "戈德里克-列文定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "表明由单向函数推导不可预知性的如下定理：假设是单向函数，使得 f 是1-1的，而且对每一个，｜ f(x) ｜=｜ x ｜。那么对每一个概率多项式时间算法 A ，存在一个可忽略函数 ε 、N→［0,1］，使得，这里 x。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Goldreich–Levin theorem"
        }
    },
    {
        "concept_name": "扩张器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个图 G=(V,E) ，满足条件：存在某个常数 ɑ ，对 V 的任何一个子集 S ，如果，那么，这里指 G 中从 S 到的边集，是 S 的补。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "expander"
        }
    },
    {
        "concept_name": "投影函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "输出为n元输入向量的某分量的函数。即，这里i是{1,2,…,n}中某个数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "projection function"
        }
    },
    {
        "concept_name": "投影归约",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定函数 f() 和 g() ，如果存在从{}到{0,1,}的映射 σ 使得 f()=g(σ(),) ，那么称 f 投影归约于 g ，也称 f() 是函数 g() 的一个投影。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "projection reduction"
        }
    },
    {
        "concept_name": "拉赫朗非分裂定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "拉赫朗1975年证明存在计算可枚举度 a ＜ b 使得 b 在 a 之上不可以分解，即不存在 x ， y ，使得 a ≤ x ＜ b , a ≤ y ＜ b ，而且 x 和 y 的上确界是 b 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Lachlan's nonsplitting theorem"
        }
    },
    {
        "concept_name": "指数时间复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "确定型图灵机在时间，对所有 k ，所识别的语言构成的类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "exponential time complexity class"
        }
    },
    {
        "concept_name": "无界搜索算子",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "又称": " 极小算子(minimization operator)",
            "定义": "一种定义函数的算子，例如，给定 f(x,y) ， g(x)=μy［f(x,y)=0］ 定义了一个函数g，对于任意的x,g(x)之值为最小的y使得f(x,y) =0。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "unbounded search operator"
        }
    },
    {
        "concept_name": "无穷损害优先方法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在构造中，一个策略可能被无穷次损害，在这种情况下怎样为一个需求设计一个策略使其最终能满足需求，解决这一问题的方法就是一个无穷损害优先方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "infinite injury priority method"
        }
    },
    {
        "concept_name": "最小上界",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在一个偏序集中，两个元素 x和y 的最小上界是满足如下条件的元素 a ：① x≤a ；② y≤a ；③对任何 z ，若 x≤z,y≤z ，则 a≤z 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "least upper bound"
        }
    },
    {
        "concept_name": "有效性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "计算所用时间或空间等资源的现实可行性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "efficiency"
        }
    },
    {
        "concept_name": "有界真值表归约于",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定自然数集合 A, B ，如果 A 真值表归约于 B ，而且在这个归约过程中，对每一个 x ，判断 x 是否属于 A 只需查 B 的一个常数大小的表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "bounded truth-table reducible to"
        }
    },
    {
        "concept_name": "有穷损害优先方法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "可计算性理论中的基本构造方法。该方法把一个条件分解成无穷个需求，所有需求排成一个线性优先序，这里排在前面的需求优先被满足。构造允许满足一个需求时优先性更低的需求被损害。该方法要求每一个需求经过有限次动作后必然被满足。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "finite injury priority method"
        }
    },
    {
        "concept_name": "期望时间复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指一个随机时间复杂性的期望值。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "expected time complexity"
        }
    },
    {
        "concept_name": "条件限制函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在某些情况下，一个策略可能设置一些带条件的限制函数，而不是绝对地限制一切受限制的数不能进入某个集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "conditional restraint function"
        }
    },
    {
        "concept_name": "极小熵",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个随机变量中所包含的纯随机比特数。令 X 是一个随机变量。 X 的极小熵，记为(X) ，定义为最大的自然数 k 使得Pr［ X=x ］≤对 X 的取值中的任何 x 成立。如果 X 是上的一个分布且( X )≥ k ，则称 X 是一个( n,k )-源。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "minimal entropy"
        }
    },
    {
        "concept_name": "析取范式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "形如的布尔表达式。这里每一个是若干个布尔变量或布尔变量的否定的合取，形如，其中每一个是一个布尔变量或布尔变量的否定。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "disjunctive normal form"
        }
    },
    {
        "concept_name": "枚举定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如下定理：存在一个部分可计算二元函数 ，使对一切 e,x ，有φ (e,x)=(x) ，这里 是编码为 e 的图灵机计算的函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "enumeration theorem"
        }
    },
    {
        "concept_name": "柯尔莫哥洛夫复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "用计算输出结果的最短程序的长度定义的复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Kolmogrov complexity"
        }
    },
    {
        "concept_name": "标位器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "标示位置的机器。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "space-marking machine"
        }
    },
    {
        "concept_name": "格局图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一个图灵机 T 及一个输入 x，T 在输入 x 时有一个初始格局 α，T 从输入 x 开始的计算就是从 α 开始的一系列格局的变换，一个有向边 α→β 表示从格局 α 经 T 的一步计算到格局 β 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "configuration graph"
        }
    },
    {
        "concept_name": "概率可检测证明",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "交互式证明的一种情形，其中证明者对验证者的回答只跟当前所问问题有关，证明者可以把验证者所有可能问的问题列成一个函数表，称为证明，而验证者只需针对所问问题去查证明表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistically checkable proofs"
        }
    },
    {
        "concept_name": "概率可检测证明定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "又称": " PCP定理",
            "定义": "非确定性多项式时间复杂性类和一个概率多项式时间验证者通过常数次随机查询证明表所识别的语言类相同。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistically checkable proofs theorem"
        }
    },
    {
        "concept_name": "概率素数检测",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "判定一个数是否素数的概率算法。其中由米勒（Miller） 和拉宾（Rabin）在1980年完成的首个概率素数检测算法称为Miller-Rabin素数检测。由阿格拉沃尔（Agrawal）、卡亚勒（Kayal）和萨克塞纳（Saxena）在2002年完成的首个确定性多项式时间素数检测算法称为Agrawal-Kayal-Saxena素数检测。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistic primality testing"
        }
    },
    {
        "concept_name": "概率通信复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对非确定通信协议，类似于概率图灵机一样定义的通信复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistic communication complexity"
        }
    },
    {
        "concept_name": "概率量词",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "和存在()及全称()量词相对应，指给一个布尔变量（比如 x ）随机地赋值，记为 Rx 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistic quantifier"
        }
    },
    {
        "concept_name": "理想",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一个上半格 L =( L ,≤,∨)，称一个子集合 IL 形成 L 的一个理想，若①如果 a∈L ， a≤b ，且 b∈I ，则 a∈I ；②如果 a∈I 且 b∈I ，那么 a∨b∈I 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "ideal"
        }
    },
    {
        "concept_name": "直线算术程序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个算术计算的线性序，每一个中间计算由前面的计算结果作算术运算而得到。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "straight-line arithmetic program"
        }
    },
    {
        "concept_name": "相对化停机问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定自然数集合 A ，相对于 A 的停机问题是如下集合：{、 x,y 、｜(y )↓}，记为，这里(y )是编码为 x 的输入 y 的计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "relativized halting problem"
        }
    },
    {
        "concept_name": "相对化枚举定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "全体一元谕示图灵机可以由一个谕示图灵机来枚举。即存在一个 z ，使得对一切自然数集 A 和自然数 x,y ，，这里是编码为 z 的谕示图灵机以 A 作为谕示计算的函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "relativized enumeration theorem"
        }
    },
    {
        "concept_name": "相对化算术层谱",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定自然数集合 A ，利用相对化的图灵机可类似地定义, 相对于 A 的算术层谱指。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "relativized arithmetical hierarchy"
        }
    },
    {
        "concept_name": "相对化递归定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对谕示图灵机的不动点定理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "relativized recursion theorem"
        }
    },
    {
        "concept_name": "真值指派",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对一个逻辑表达式中的所有命题变量赋予值0或1（分别表示假和真）的一个方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "truth assignment"
        }
    },
    {
        "concept_name": "确定性时间",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "确定型图灵机的计算时间。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "deterministic time"
        }
    },
    {
        "concept_name": "程序检测",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "检测一个程序是否计算函数 f 的局部算法。例如，如下协议就是一个程序检测：给定程序 P 和函数 f ，程序检测员 C 是一个多项式时间概率图灵机，它通过和 P 交互来确认 P 是否正确，要求对任给输入 χ ，①如果 P 是计算 f 的正确程序，那么Pr［接受 P ( x )］=1；且②如果 P ( x )≠ f(x) ，那么Pr［接受P(x)]、，这里是指检测员 C 和程序 P 的交互协议。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "program checking"
        }
    },
    {
        "concept_name": "空间可构造函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定函数 f ∶N→N，如果存在图灵机使得对输入，在空间 O ( f(n)) 内输出，那么称 f 是一个空间可构造函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "space-constructible function"
        }
    },
    {
        "concept_name": "空间层谱定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果 f,g 是空间可构造函数，满足 f(n) = o(g(n)) ，那么，SPACE( f(n) )SPACE( g(n) )，这里SPACE( f(n) )是确定型图灵机在空间 f(n) 内所接受的一切语言构成的类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "space hierarchy theorem"
        }
    },
    {
        "concept_name": "算术公式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "每一个门的出度都是1的代数线路。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "arithmetic formula"
        }
    },
    {
        "concept_name": "算术化",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "把逻辑公式变换成代数表达式的方法。例如：利用规则① x∧y↔x·y ；；③ x∨y↔1-(1-x)(1-y)，把布尔公式Φ变换为多项式使得对于Φ的可满足指派，( )=1，对于Φ的不可满足指派，()=0。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "arithmetization"
        }
    },
    {
        "concept_name": "算术层谱",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一切和的并。特别地，称一个自然数集合 A 是算术的，若。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "arithmetical hierarchy"
        }
    },
    {
        "concept_name": "算法复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "针对某个特定算法的计算复杂性，但不限于使用图灵机作为衡量时间和空间复杂性的模型，例如可以使用常规计算机的指令执行数作为时间复杂性，所使用的存储单元数作为空间复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algorithm complexity"
        }
    },
    {
        "concept_name": "纠错码",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对， x 和 y 的分数汉明距离定义为。给定常数 δ =［0,1］，和函数，如果对所有 x≠y ，Δ( E(x),E(y ))≥ δ ，那么称函数是一个距离 δ 的纠错码。我们定义为 E 的码字集。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "error correcting code"
        }
    },
    {
        "concept_name": "约翰逊不等式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果是一个距离至少为1、2-ε的纠错码，那么对每一个和，存在至多个向量使得对每一个。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Johnson's inequality"
        }
    },
    {
        "concept_name": "线性加速定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "时间复杂性可以任意地线性加速，即如果一个函数 f 有时间 T(n) 的算法，则对任意小常数 ε ，必然存在时间 εT(n )的算法来计算 f ；空间复杂性也可以类似任意地线性加速。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linear speedup theorem"
        }
    },
    {
        "concept_name": "线路复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个布尔线路 C=(V, E) 的复杂性定义为该线路中所包含的门的数目，即节点集 V 的数目。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "circuit complexity"
        }
    },
    {
        "concept_name": "结构复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "待计算问题的复杂性类，而非特定问题的计算复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "structural complexity"
        }
    },
    {
        "concept_name": "统计距离",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "令Ω是一个有限集，对值域为Ω的两个随机变量 X和Y ，其统计距离定义为{｜Pr［ X∈S ］－Pr［ Y∈S ］｜}。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "statistical distance"
        }
    },
    {
        "concept_name": "能行性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "计算过程中每一个动作都是机械的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "effectiveness"
        }
    },
    {
        "concept_name": "能行枚举",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "枚举一个集合的算法执行过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "effective enumeration"
        }
    },
    {
        "concept_name": "能行配数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定一切可计算函数的枚举，如果①这是一个能行枚举过程；②它是可接受配数，那么称它是一个能行配数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "effective numbering"
        }
    },
    {
        "concept_name": "萨克斯分裂定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "任给计算可枚举图灵度 a ＞0，存在计算可枚举图灵度,，使得＜，＜a ，且∨=a ，这里∨是和的上确界。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Sacks splitting theorem"
        }
    },
    {
        "concept_name": "补定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个集合 A 是可计算的，当且仅当 A 和 A 的补均是计算可枚举的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "complementation theorem"
        }
    },
    {
        "concept_name": "计算不可区分的",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定随机变量序列，，m(n)为多项式，如果对每一个概率多项式时间算法 A ，存在可忽略函数 ε 、N→［0,1］，使得对每一个 n ∈N，成立，那么称是计算不可区分的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "computationally indistinguishable"
        }
    },
    {
        "concept_name": "计算可枚举图灵度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果一个图灵度中包含有一个计算可枚举集合，则称它为一个计算可枚举图灵度。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "computably enumerable Turing degree"
        }
    },
    {
        "concept_name": "计算可枚举度的并定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对任意的非零计算可枚举图灵度 x ，存在计算可枚举图灵度 a 使得 a ″=( a ∨ x )′=0″，这里 y′ 是 y 的图灵跃变。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "join theorem for the computably enumerable Turing degrees"
        }
    },
    {
        "concept_name": "计算可枚举集完全性准则",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个计算可枚举集 A 是完全的，当且仅当存在函数 fA 使得对一切 x ，，即 f 没有不动点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "completeness criterion for the computably enumerable sets"
        }
    },
    {
        "concept_name": "计算可枚举集的归约原理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "任给两个计算可枚举集 X,Y ，存在计算可枚举集X ∪ Y 。这里是空集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "reduction principle for the computably enumerable sets"
        }
    },
    {
        "concept_name": "计算可枚举集的范式定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "定理如下：一个集合 A 是计算可枚举的，当且仅当它是的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "normal form theorem for the computably enumerable sets"
        }
    },
    {
        "concept_name": "计算零知识",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在一个交互式证明、 P,V 、中，对每一个概率多项式时间交互策略，存在概率多项式时间模拟者，使得和 P 的交互计算和的计算是计算不可区分的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "computational zero knowledge"
        }
    },
    {
        "concept_name": "证书复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定，如果 f(x) =0，那么 x 的0-证书是 x 的位的一个系列，它证明 f(x) =0，如果 f(x) =1，那么 x 的1-证书是 x 的位的一个系列，它证明 f(x) =1， f 的证书复杂性定义为的最短0-或1-证书的长度｝。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "certificate complexity"
        }
    },
    {
        "concept_name": "词典序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如下定义的线性序：给定一个字母表Σ，通过固定Σ中元素的优先序，比如，基此可以给一切Σ上的文字定义出一个线性序，这就是Σ上的词典序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "lexicographical order"
        }
    },
    {
        "concept_name": "诱导子图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指在一个图 G 中由某个节点子集 S 生成的 G 的子图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "induced subgraph"
        }
    },
    {
        "concept_name": "谕示图灵机",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "安装了只读的谕示带的图灵机。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "oracle Turing machine"
        }
    },
    {
        "concept_name": "谕示带",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "图灵机存储外部信息的只读带子。图灵机在运行过程中可以查询谕示带上的某些信息，根据谕示带上不同的信息作不同的选择。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "oracle tape"
        }
    },
    {
        "concept_name": "谕示构造",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "集合或函数的构造，在其中用到了外部信息源，而并非每一个动作都是机械的算法步骤。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "oracle construction"
        }
    },
    {
        "concept_name": "费根定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "断言NP等价于存在二阶布尔查询集构成的类，简记为NP = SO。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Fagin's theorem"
        }
    },
    {
        "concept_name": "超线性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果一个函数不被任何线性函数界定，那么称它是超线性函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "superlinear"
        }
    },
    {
        "concept_name": "跃变算子",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "利用相对停机问题不可判定性定义的算子，它把一个自然数集合 A 变换到相对于 A 的停机问题，这时必有 A 严格图灵归约于。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "jump operator"
        }
    },
    {
        "concept_name": "迈希尔同构定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "定理如下：给定自然数集合 A,B,A 可计算同构于 B 当且仅当 AB 而且 BA 同时成立。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Myhill isomorphism theorem"
        }
    },
    {
        "concept_name": "适配查询",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "根据以前提问所得到的回答，再提出的查询问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "adaptive query"
        }
    },
    {
        "concept_name": "递归可枚举语言",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "又称": " 计算可枚举语言",
            "定义": "图灵机接受的语言，即存在一个算法来枚举其成员的语言。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "recursively enumerable language"
        }
    },
    {
        "concept_name": "递归可枚举集合",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "又称": " 计算可枚举集合",
            "定义": "图灵机接受的集合，即存在一个算法来枚举其成员的集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "recursively enumerable set"
        }
    },
    {
        "concept_name": "递归定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "可计算函数的不动点定理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "recursion theorem"
        }
    },
    {
        "concept_name": "逻辑门",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "简称": " 门",
            "定义": "在布尔线路中的一个节点，它可以表示一个布尔运算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "logic gate"
        }
    },
    {
        "concept_name": "部分真值指派",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对一个逻辑表达式中的某些命题变量赋予0或1（分别表示假和真），而其他变量仍保持为命题变量的一个方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "partial truth assignment"
        }
    },
    {
        "concept_name": "配对函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个从自然数对到自然数的可计算函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pairing function"
        }
    },
    {
        "concept_name": "量词作用域",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指一个量词起作用的范围，在此范围内所有变元均受此量词的约束。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "scope of a quantifier"
        }
    },
    {
        "concept_name": "量词收缩定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "定理如下：若存在一个可计算关系 R 使得) }，则 A 是的。直观地说，若干个存在量词相继出现时，可压缩成一个存在量词。对全称量词，也有同样的压缩定理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "quantifier contraction theorem"
        }
    },
    {
        "concept_name": "错误侦查",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "检查一个编码，或一个程序，或一个计算中的错误的局部算法，通常是次线性或常数时间算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "error-detection"
        }
    },
    {
        "concept_name": "错误概率",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指一个随机算法计算结果的错误概率。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "error probability"
        }
    },
    {
        "concept_name": "间隙定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在复杂性类的层谱中存在任意大的可计算间隔。对任意一个表示计算资源增加的可计算函数 f ，一定存在一个计算资源的函数 T ，使得对任意 n,T(n) 和 f(T(n)) 资源内计算的类是一样的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "gap theorem"
        }
    },
    {
        "concept_name": "阿克曼函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如下定义的一个双递归函数：① ψ(0,y)=y+1 ；② ψ(x+1,y)=ψ(x,1) ；③ ψ(x+1,y+1)=ψ(x,ψ(x+1,y))。它是一个递归函数，但不是原始递归函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Ackermann function"
        }
    },
    {
        "concept_name": "随机位",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指抛一次硬币得到的一个随机数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "random bit"
        }
    },
    {
        "concept_name": "随机化归约",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "给定语言 A,B ，如果存在一个概率图灵机 M ，使对一切 x ，， M(x) 的时间期望是，那么称 A 随机化多项式时间归约于 B ，记为 ，这里 和分别是 B 和 A 的特征函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "randomized reduction"
        }
    },
    {
        "concept_name": "随机化算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指允许使用随机资源的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "randomized algorithm"
        }
    },
    {
        "concept_name": "随机存取机",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "英文": "random access machine ;RAM",
            "定义": "一种具有多寄存器的抽象机器模型，它拥有能对寄存器间接定址的能力，常被用于计算复杂性理论之中。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "random access machine"
        }
    },
    {
        "concept_name": "随机归约",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "指作为归约使用的随机算法或概率图灵机。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "random reduction"
        }
    },
    {
        "concept_name": "随机性提取器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个函数，可以在少量的纯随机比特为种子的条件下提取一个随机变量（不纯）的纯随机比特。给定函数，如果对任何( n,k )-源 X ，分布是 ε -接近的，即，则称Ext是一个( k,ε )-提取器，这里是上的一致分布。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "randomness extractor"
        }
    },
    {
        "concept_name": "难解问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "时间或空间复杂性很高的算法问题，在直观上不太可能有多项式时间算法求解的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "intractable problem"
        }
    },
    {
        "concept_name": "零知识证明系统",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "一个交互式证明系统同时还满足如下条件：实质上验证者没有从跟证明者的交互中得到除“成功”或“失败”的任何其他信息，这一条件的不同要求可引导出统计零知识和计算零知识等。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "zero-knowledge proof system"
        }
    },
    {
        "concept_name": "需求",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "可计算性中的一个条件通常涉及所有图灵机，因此每一个图灵机要求一个子条件，这个子条件就称为一个需求。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "requirement"
        }
    },
    {
        "concept_name": "非一致构造",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "在不能构造一个对象满足定理条件时，可同时构造无穷个对象并证明其中之一满足定理条件的方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-uniform construction"
        }
    },
    {
        "concept_name": "非确定性指数时间复杂性类",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "非确定型图灵机在时间所接受的一切语言构成的集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-deterministic exponential time complexity class"
        }
    },
    {
        "concept_name": "非确定性时间",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "非确定型图灵机的计算时间。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-deterministic time"
        }
    },
    {
        "concept_name": "非确定性时间层谱定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "如果 f,g 都是时间可构造函数且 f ( n +1)= o(g(n)) ，那么，NTIME( f(n) )NTIME( g(n) )，这里NTIME( f(n) )是非确定型图灵机在时间 f(n) 内所识别的一切语言构成的类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-deterministic time hierarchy theorem"
        }
    },
    {
        "concept_name": "非确定性空间复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对于非确定型图灵机 M ，当运行中所有可能非确定选择都已选定，则它是确定型图灵计算。非确定性空间复杂性为在所有可能非确定选择中最大空间的确定空间复杂性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-deterministic space complexity"
        }
    },
    {
        "concept_name": "非确定性空间复杂性定理",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "对任何空间可构造函数 f(n) ≥log n ，NSPACE (f(n))SPACE，这里NSPACE( f(n) )是非确定型图灵机在空间 f(n) 内所识别的一切语言构成的类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-deterministic space complexity theorem"
        }
    },
    {
        "concept_name": "非适配查询",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "提出一个查询问题不依赖以前的提问及所得到的回答。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-adaptive query"
        }
    },
    {
        "concept_name": "顺序算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_可计算性与计算复杂性",
            "定义": "与并行算法相对。一种算法，它在 t +1时刻的计算要大量用到 t 时刻以前的所有中间计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential algorithm"
        }
    }
]