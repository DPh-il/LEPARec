[
    {
        "concept_name": "VLSI并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在超大规模集成电路（VLSI）计算模型上开发一类并行算法。如脉动算法、波前算法等。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "VLSI parallel algorithm"
        }
    },
    {
        "concept_name": "ρ(n )近似算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "算法的解 C 若满足，则称算法是 ρ(n) -近似算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "ρ(n )-approximation algorithm"
        }
    },
    {
        "concept_name": "不可近似性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "对于有些问题，不存在一个有界的近似算法，则称该问题具有不可近似性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "inapproximability"
        }
    },
    {
        "concept_name": "串匹配",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "全称": " 字符串匹配",
            "定义": "在一个字符串中查找模式串的一个或所有出现。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "string matching"
        }
    },
    {
        "concept_name": "二分插入",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在插入排序中，要依次将元素插入前面已排好序的序列中。由于前半部分已排好序，可以采用二分查找的方法来加快插入速度。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binary insertion"
        }
    },
    {
        "concept_name": "二分搜索",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在有序序列上进行快速查找的一种方法，其要点是每次将要查找的键值与位于序列中间位置的元素比较。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binary search",
            "prerequisite": [
                "K_数据库索引_计算机科学技术",
                "K_内存索引_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "二维网孔",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行机中的一种互联方式，每个节点只与其上下左右四个近邻相连。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "two-dimensional mesh"
        }
    },
    {
        "concept_name": "二路归并",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "将两个已经排序的序列合并成一个有序序列的操作。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binary merge"
        }
    },
    {
        "concept_name": "交互计算",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "涉及到与用户交互以及外部相交互和通信的计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "interactive computing"
        }
    },
    {
        "concept_name": "交换排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "根据序列中两个记录键值的比较结果，来对换这两个记录在序列中的位置，将键值较大的记录向序列的尾部移动，键值较小的记录向序列的前部移动。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "exchange sort"
        }
    },
    {
        "concept_name": "众核计算",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "基于众核体系结构的计算模式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "many-core computing"
        }
    },
    {
        "concept_name": "伪多项式时间算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "若一个数值算法的时间复杂度可以表示为输入数值 N的多项式, 则称其时间复杂度为伪多项式时间。由于N的值是N的位数的幂, 故该算法的时间复杂度实际上应视为输入数值N 的位数的幂。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pseudo polynomial-time algorithm"
        }
    },
    {
        "concept_name": "信包选路问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定一个带有源地址和目的地址，按照某种算法，在尽可能少的步距内，将这些信包由源地传送到它们的目的地。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "packet routing problem"
        }
    },
    {
        "concept_name": "倍增技术",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 指针跳跃技术",
            "定义": "并行算法设计的一种方法，适用于处理链表或有根树之类的数据结构，每当递归调用时，所要处理的数据之间的距离将逐步加倍，经过 k 步以后就可以完成距离为的所有数据的计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "doubling technique"
        }
    },
    {
        "concept_name": "偏序集",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "英文": "partial ordered set ;poset",
            "定义": "其成员之间满足自反律( a≤a), 反对称律（由a≤b 和b≤a得 a=b)和传递律（由a≤b 和b≤c得a≤c ) 的集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "partial ordered set"
        }
    },
    {
        "concept_name": "元启发式优化算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一类通用型的启发式算法，这类算法的优化机理不过分依赖待解问题的结构信息，可以应用到众多类别的组合优化或函数优化中。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "meta heuristic optimization algorithm"
        }
    },
    {
        "concept_name": "克鲁斯卡尔算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在加权连通图里搜索最小生成树的一种算法，该算法根据边的权值以递增的方式，依次找出权值最低的边来建最小生成树，要求每次添加的边不能造成生成树有回路。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Kruskal's algorithm"
        }
    },
    {
        "concept_name": "八皇后问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "国际象棋棋盘上摆放八个皇后，使其不能相互攻击，即任意两个皇后不能处于同一行、列、斜线上，求用算法解出所有不同的摆法。此问题常用来考核算法和程序语言编写递归程序的能力。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "eight queens problem"
        }
    },
    {
        "concept_name": "冒泡排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "重复访问待排序数组，在一次访问中，依次比较两个相邻元素，逆序时就交换，重复进行直到没有交换为止。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "bubble sort"
        }
    },
    {
        "concept_name": "分布式排序算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "用分布式的原理进行排序的算法，分静态排序和动态排序两类。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "distributed sorting algorithm"
        }
    },
    {
        "concept_name": "分布式算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "应用在分布式计算场景中的算法，分布性和并发性是分布式算法的两个最基本的特征。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "distributed algorithm"
        }
    },
    {
        "concept_name": "分支限界",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 分支限界法",
            "定义": "以广度优先或最小耗费优先的方式搜索解空间树，不断淘汰较差的解，使搜索朝着解空间树上有最优解的分支前进。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "branch and bound"
        }
    },
    {
        "concept_name": "分治",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 分治法",
            "定义": "逐次把一个复杂的问题分成多个相同或相似的子问题，直到最后子问题可以简单地直接求解，原问题的解即为子问题的解的合并。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "divide and conquer"
        }
    },
    {
        "concept_name": "划分技术",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行算法设计的一种方法。该方法将所求解的问题划分成 p 个独立的、几乎等尺寸的子问题，然后用 p 台处理器并行求解各个子问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "partitioning technique"
        }
    },
    {
        "concept_name": "划分算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种整体局部化，集合划分为子集的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "partitioning algorithm"
        }
    },
    {
        "concept_name": "加速比",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "全称": " 加速度比",
            "定义": "求解一个问题的串行算法的执行时间与求解该问题的并行算法在多个处理机上并行执行的时间之比。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "speedup"
        }
    },
    {
        "concept_name": "动态规划",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "利用问题的最优子结构性，将待求解问题分解成若干个子问题求解，从这些子问题的解得到原问题的解。在此过程中，需记录已经解决的子问题的解，以避免重复计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dynamic programming"
        }
    },
    {
        "concept_name": "原地",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一个原地算法是一种使用小的、固定数量的额外空间来转换数据的算法。当算法执行时，输入的数据通常会被要输出的部分覆盖掉。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "in-place"
        }
    },
    {
        "concept_name": "可扩放性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行算法的性能随处理机个数的增加而按比例提高的能力。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "scalability"
        }
    },
    {
        "concept_name": "可行解",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "满足所有约束条件的任意一组解。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "feasible solution"
        }
    },
    {
        "concept_name": "合数问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定一个正整数 n，判定它是否是一个合数。如果除了1和它自己，n还有其他的因子，则n 为合数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "composite number problem"
        }
    },
    {
        "concept_name": "同步并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种即时的、实现进程之间完全同步执行的并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "synchronized parallel algorithm"
        }
    },
    {
        "concept_name": "同步算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "各个计算步骤上保持各进程的执行之间同步的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "synchronized algorithm"
        }
    },
    {
        "concept_name": "启发式优化算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "解决组合优化问题的一个基于直观或经验构造的算法，能够在可接受的计算时间和空间开销下给出问题的一个可行解，该可行解与最优解的偏离程度不一定事先可以预计。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "heuristic optimization algorithm"
        }
    },
    {
        "concept_name": "哈密顿回路问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "对任意给定的图 G，判定是否存在G的一条路径，它经过G 中每一个节点恰好一次。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Hamilton cycle problem"
        }
    },
    {
        "concept_name": "回溯",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 回溯法",
            "定义": "按选优条件进行搜索，但当探索到某一步时，发现原先选择达不到最优，就退回一步重新选择，直到达到最优。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "backtracking"
        }
    },
    {
        "concept_name": "团",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "图中两两之间都有边的顶点集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "clique"
        }
    },
    {
        "concept_name": "图同构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定两个图，若它们的顶点集合之间能够建立一一对应的映射,对应的顶点之间也能保持边的一一对应关系，则称它们是同构的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "graph isomorphism"
        }
    },
    {
        "concept_name": "埃德蒙兹-卡普算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种要求每次找长度最短的增广路径的求网络最大流的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Edmonds-Karp's algorithm"
        }
    },
    {
        "concept_name": "堆排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "利用堆数据结构设计的一种排序算法，并同时满足堆的属性，子节点的键值或索引总是小于（或大于）它的父节点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "heap sort"
        }
    },
    {
        "concept_name": "备忘录算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "动态规划算法的一种变形。与动态规划算法不同的是，备忘录算法的递归方式是自顶向下的，而动态规划算法是自底向上的。该方法为每个子问题建立了备忘录，避免了相同子问题的重复求解。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "memorandum algorithm"
        }
    },
    {
        "concept_name": "外路长度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "从树根到树中所有叶子节点的路径长度之和。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "external path length"
        }
    },
    {
        "concept_name": "多核计算",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "基于单个CPU的多核体系结构的计算模式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "multi-core computing"
        }
    },
    {
        "concept_name": "多项式时间算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "时间复杂度是 O(p(n))的算法称为多项式时间算法，这里p(n)是关于n 的多项式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial-time algorithm"
        }
    },
    {
        "concept_name": "多项式时间近似格式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "若对固定的ε、0和问题的一个输入规模为 n 的实例，用近似格式表示的算法是多项式时间算法，则称为多项式时间近似格式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "polynomial-time approximation scheme"
        }
    },
    {
        "concept_name": "完全多项式时间近似格式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "当一个问题的近似格式的计算时间是关于1、ε和问题的实例的输入规模 n 的多项式时，则称为完全多项式时间近似格式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "fully polynomial-time approximation scheme"
        }
    },
    {
        "concept_name": "宏流水线算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种多指令流多数据流并行算法，具有规整、便于用多处理机或超大规模集成电路实现，适于批处理等优点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "macropipelining algorithm"
        }
    },
    {
        "concept_name": "平均性态分析",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "设 f(x,n)为规模为n的输入为x时算法C的复杂性度量，若输入x的概率分布为p(n,x)，则称为算法C 的平均性态。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "average-behavior analysis"
        }
    },
    {
        "concept_name": "平衡树方法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行算法设计的一种方法，该方法将输入元素作为叶子节点构造一棵平衡树，然后通过自叶子向根的往返遍历，实现诸如求和、最大值、前缀和等计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "balanced tree method"
        }
    },
    {
        "concept_name": "并行图论算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行计算图论问题的算法，如增值并行图论算法、并行最短路径算法等。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel graph algorithm"
        }
    },
    {
        "concept_name": "并行外排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "用并行方法对外存数据进行排序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel external sorting"
        }
    },
    {
        "concept_name": "并行排序算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "使用并行方法实现排序的一种算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel sorting algorithm"
        }
    },
    {
        "concept_name": "并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "为了最大限度地挖掘所求解问题的可并行执行部分以节省执行算法所需的时间，将给定的问题分解成若干个尽量相互独立的子问题，使之可以分别独立计算，然后把各部分的计算结果综合起来以得到最后的结果。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel algorithm"
        }
    },
    {
        "concept_name": "并行算法的成本",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行算法的运行时间与其所需的处理机数的乘积。等于最坏情况下串行求解时的总执行步数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "cost of the parallel algorithm"
        }
    },
    {
        "concept_name": "并行选择算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在一给定的序列中选择出某组满足给定条件的元素的并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel selection algorithm"
        }
    },
    {
        "concept_name": "并行随机存取机",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种对随机存取机模型作直接扩展而形成的并行计算模型。它假设有一个无限大容量的共享存储器，并且有多个功能相同的处理器。在任意时刻，任意处理器都可在一个周期内访问任意的共享存储单元。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parallel random access machine"
        }
    },
    {
        "concept_name": "异步并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种进程的执行之间并不同步的并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "asynchronous parallel algorithm"
        }
    },
    {
        "concept_name": "异步算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "各个计算步骤上各进程执行之间不同步的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "asynchronous algorithm"
        }
    },
    {
        "concept_name": "归并插入",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "将两个（或两个以上）有序表合并成一个新的有序表。把待排序序列分为若干个子序列，每个子序列是有序的，然后再把有序子序列合并为整体有序序列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "merge insertion"
        }
    },
    {
        "concept_name": "快速傅里叶变换",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "基于分治策略的计算傅里叶变换的算法，该算法在 O ( n log n )时间里完成长度为 n 的序列的傅里叶变换。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "fast Fourier transform"
        }
    },
    {
        "concept_name": "快速排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "通过一趟扫描将要排序的数据分割成独立的两部分，其中一部分的所有数据比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以将整个数据变成有序序列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "quicksort"
        }
    },
    {
        "concept_name": "拉斯维加斯算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种随机算法，它保证不会得到不正确的解。一旦用它找到一个解，这个解就一定是正确解。但有时用该算法找不到解。该算法找到正确解的概率随着它所用的计算时间的增加而提高。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Las Vegas algorithm"
        }
    },
    {
        "concept_name": "排序网络",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "采用不同的拓扑链接的比较器所组成的实现排序功能的一种网络。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sorting network"
        }
    },
    {
        "concept_name": "插入排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "insertion sort"
        }
    },
    {
        "concept_name": "效率",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行算法的加速比与所用的处理机个数之比，反映处理机的处理能力有效利用的程度。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "efficiency"
        }
    },
    {
        "concept_name": "数据的相关关系",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "计算问题中对数据的计算之间存在的次序约束关系，由于存在相关关系的计算不能直接并行执行，它影响着对计算的并行化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data dependency"
        }
    },
    {
        "concept_name": "整数规划",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "若规划中的变量（全部或部分）限制为整数，则称为整数规划。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "integer programming"
        }
    },
    {
        "concept_name": "斯坦纳树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "图中的总代价最小的分布树，它使连接特定图中的特定组成员所需的链路数最少。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Steiner tree"
        }
    },
    {
        "concept_name": "施特拉森算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "进行矩阵乘法的一种算法，该算法基于递归与分治策略，可在时间完成两个 n 阶矩阵相乘。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Strassen's algorithm"
        }
    },
    {
        "concept_name": "旅行商问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定 n 个节点的集合，个从 i到j 的距离 d(i,j) ，1≤ i,j ≤ n ，以及正整数 k ，判定是否存在一个闭路，在其上每个节点恰好被访问一次，且距离总和不超过 k 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "traveling salesman problem"
        }
    },
    {
        "concept_name": "时间空间权衡",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在算法的设计中，对算法的时间和空间开销之间做出的权衡。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "space versus time trade-offs"
        }
    },
    {
        "concept_name": "普里姆算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在加权连通图里搜索最小生成树的一种算法。此算法搜索到的边的子集所构成的树中，不但包括了连通图里的所有顶点，且其所有边的权值之和亦为最小。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Prim's algorithm"
        }
    },
    {
        "concept_name": "最优子结构性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "如果对于一个多阶段决策过程的优化问题，不论初始状态和初始决策如何，对于先前决策造成的状态而言，余下的那些决策必构成一最优决策，则称该问题具有最优子结构性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "property of optimal substructure"
        }
    },
    {
        "concept_name": "最优并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "程序串行处理的最佳时间和并行处理时间之比等于并行时的处理器个数的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "optimal parallel algorithm"
        }
    },
    {
        "concept_name": "最优归并树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在归并多个已排序的文件时，常常将它们逐次分组进行二路归并，使得计算时间最少的逐次分组方法所对应的二叉树称为最优归并树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "optimal merge tree"
        }
    },
    {
        "concept_name": "最优解",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "组合优化中的最大（或最小）解。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "optimal solution"
        }
    },
    {
        "concept_name": "最坏情况时间复杂性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一个算法的最坏情况时间复杂性，是指对每一个整数 n ，耗时最多的长为 n 的输入所用的时间。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "worst-case time complexity"
        }
    },
    {
        "concept_name": "最大值问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "组合优化中求解最大值的一类问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "maximization problem"
        }
    },
    {
        "concept_name": "最大团问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "对于一个给定图，求解其中规模最大的团的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "maximum clique problem"
        }
    },
    {
        "concept_name": "最小值问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "组合优化中求解最小值的一类问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "minimization problem"
        }
    },
    {
        "concept_name": "有效并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "泛指用多项式数目的处理器能在对数多项式时间内求解某一问题的一类并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "efficient parallel algorithm"
        }
    },
    {
        "concept_name": "树压缩技术",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "利用树数据结构实现了数据的压缩存储。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "tree contraction technique"
        }
    },
    {
        "concept_name": "树形链接",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行机中的一种互联方式，每个节点只与其唯一的父亲节点和若干儿子节点相连。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "tree interconnection"
        }
    },
    {
        "concept_name": "桶排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 基数排序",
            "定义": "通过将待排序数组元素分配到有限个有序的桶中，然后分别在每个桶内排序，最后按顺序从桶中取出数据放回数组完成排序。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "bucket sort"
        }
    },
    {
        "concept_name": "检索树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种树形结构，常应用于统计和排序大量的字符串。优点是最大限度地减少无谓的字符串比较，查询效率比较高。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "retrieve tree"
        }
    },
    {
        "concept_name": "概率并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "允许算法在执行的过程中随机并行选择下一个计算步骤的并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistic parallel algorithm"
        }
    },
    {
        "concept_name": "概率算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "概率算法允许算法在执行过程中随机选择下一个计算步骤, 这种随机性选择常比最优选择省时，可在很大程度上降低算法的复杂度。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "probabilistic algorithm"
        }
    },
    {
        "concept_name": "模拟退火算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种根据固体退火原理、基于蒙特卡罗迭代求解策略的随机寻优算法。模拟高温金属的退火过程，通过扩大搜索范围以获取较优的解来改善局部搜索算法无法跳出局部最优的状况。局部搜索算法的推广，广泛应用于组合优化问题中。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "simulated annealing algorithm"
        }
    },
    {
        "concept_name": "比较器网络",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "由贝切尔比较器为基本组成单元，按一定的拓扑链接组成的网络，可用于实现归并、选择、排序等并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "comparator network"
        }
    },
    {
        "concept_name": "波前算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在波前阵列上实现的并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "wavefront algorithm"
        }
    },
    {
        "concept_name": "波前阵列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种基于数据驱动模式的、全局异步的阵列处理机计算模型。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "wavefront array"
        }
    },
    {
        "concept_name": "洗牌交换链接",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行机中的一种基于洗牌函数和交换函数的互联方式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "shuffle-exchange interconnection"
        }
    },
    {
        "concept_name": "流水线算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种必须严格遵循先后次序的算法，其中前一个算法的输出是后继算法的输入。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "pipelining algorithm"
        }
    },
    {
        "concept_name": "激励相容",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在不完全信息博弈当中，如果一种机制能够获得博弈者的真实信息并能够防止博弈者的策略性操纵，这种机制被称作激励相容机制。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "incentive compatible"
        }
    },
    {
        "concept_name": "独立集",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "图中两两互不相邻的顶点构成的集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "independent set"
        }
    },
    {
        "concept_name": "独立集问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定一个图 G 和一个数 k ，判定是否存在 G 的顶点的大小为 k 的独立集。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "independent set problem"
        }
    },
    {
        "concept_name": "着色数目问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "对于给定图 G及整数k，判定是否存在G顶点的至多使用k 种不同颜色的着色方法，使得任意边的两个顶点具有不同颜色的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "chromatic number problem"
        }
    },
    {
        "concept_name": "破对称技术",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行算法设计的一种方法。通过打破某些问题的对称性来将其并行化，常用在图论问题和随机并行算法设计上。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "symmetry breaking technique"
        }
    },
    {
        "concept_name": "确定性算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "算法的每一步都能明确下一步应该如何进行的一类算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "deterministic algorithm"
        }
    },
    {
        "concept_name": "确定选路算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "每条信包在传送的过程中，由一个节点按固定的策略传向下一个节点，直至到达目的地。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "deterministic routing algorithm"
        }
    },
    {
        "concept_name": "福特-富尔克森方法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "通过寻找增广路径来求解最大流问题（即从源点到汇点经过路径的所有流量和）的一种迭代方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Ford-Fulkerson's method"
        }
    },
    {
        "concept_name": "稳定排序算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在排序之后，能够使得具有相同大小的键值的记录前后位置没有发生变化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "stable sorting algorithm"
        }
    },
    {
        "concept_name": "空间需求",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "解决问题所需要的存储介质的大小。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "space requirements"
        }
    },
    {
        "concept_name": "算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "解决给定问题的确定的计算机指令序列，用以系统地描述解决问题的步骤。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algorithm",
            "prerequisite": [
                "K_平均查找长度_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "算法分析",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "对一个算法需要多少计算时间和存储空间作定量分析的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algorithm analysis",
            "prerequisite": [
                "K_分治_计算机科学技术",
                "K_二路归并_计算机科学技术",
                "K_抽象数据类型_计算机科学技术",
                "K_选择排序_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "算法博弈论",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "计算机科学与博弈论的交叉研究领域。从博弈的角度、以经济学和计算理论的方法分别研究计算机科学和经济学中的计算模型。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "algorithmic game theory"
        }
    },
    {
        "concept_name": "算法正确性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在给定有效输入后，算法经过有限时间的计算能产生正确的答案，就称算法具有正确性。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "correctness of algorithm",
            "prerequisite": [
                "K_递归调用_计算机科学技术",
                "K_广度优先搜索_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "米勒-罗宾算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "素数测试+大数的因素分解的概率算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Miller-Robin algorithm"
        }
    },
    {
        "concept_name": "粒子群优化算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种基于群体协作的随机搜索算法，该方法模拟粒子运动，使粒子根据对环境的适应度的变化不断地向解空间的较优的区域移动，从而达到群体优化的目的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "particle swarm optimization algorithm"
        }
    },
    {
        "concept_name": "索林算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "加权连通图里搜索最小生成树的一种算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Sollin algorithm"
        }
    },
    {
        "concept_name": "约翰逊算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在稀疏图上求每对顶点之间最短路径的一种算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Johnson algorithm"
        }
    },
    {
        "concept_name": "纳什均衡",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在不完全信息博弈当中，所有参与博弈的人策略构成一个策略组。纳什均衡指的是这样一种战略组合，这种策略组合由所有参与人最优策略组成，即在给定别人策略的情况下，没有人有足够理由打破这种均衡。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Nash equilibrium"
        }
    },
    {
        "concept_name": "线性规划",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "在线性约束条件下，寻求线性目标函数的极值的问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linear programming"
        }
    },
    {
        "concept_name": "线性阵列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行机中最简单、最基本的一种互联方式，其中每个节点只与其左右近邻相连。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linear array"
        }
    },
    {
        "concept_name": "线路交换模式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "信包选路的一种模式。在该模式中，对一条消息在网络的相应的点对之间建立一条专用的路径，消息沿此路径以串行、流水线式地传递。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "circuit switching"
        }
    },
    {
        "concept_name": "罗宾-泽利科夫斯基算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "求解斯坦纳树问题的一种近似算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Robin-Zelikovsky's algorithm"
        }
    },
    {
        "concept_name": "背包问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定一组物品，每种物品都有自己的重量和价格，在限定的总重量内，如何选择，才能使得物品的总价格最高。问题的名称来源于如何选择最合适的物品放置于给定背包中。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "knapsack problem"
        }
    },
    {
        "concept_name": "脉动算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 心动算法;搏动算法",
            "定义": "由H．T．Kung等于20世纪70年代末首先提出来。数据由主机不断地、有节奏地传送到处理机阵列中，数据在阵列中流动的同时，完成加工和处理任务，这恰似血液因心脏收缩而有节奏地流遍全身，在流动过程中完成其特定的生理功能。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "systolic algorithm"
        }
    },
    {
        "concept_name": "自调度算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "自己控制自身、调用自身的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "self-scheduled algorithm"
        }
    },
    {
        "concept_name": "舍伍德算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "当一个确定性算法在最坏情况下的时间复杂度与其在平均情况下的复杂性有较大差异时，可在确定性算法中引入随机性来消除或减少这种差异，所得到的随机算法即为舍伍德算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Sherwood algorithm"
        }
    },
    {
        "concept_name": "蚁群优化算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "模拟蚂蚁群体在经过的路径上留下信息素，并通过信息素来协同发现最短觅食路径的行为的优化算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "ant colony optimization algorithm"
        }
    },
    {
        "concept_name": "装箱问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "如何将较多的物品装到最少个数的固定大小的箱子里的问题。根据优化目标，可以分为重量、体积、箱子的个数的装箱问题。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "bin packing"
        }
    },
    {
        "concept_name": "调度问题",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "假设有 n 个任务由 k 个并行工作的机器来完成，完成任务 i 需要的时间为 。设计一个算法找出完成这 n 个任务的最佳调度，使得完成全部任务的时间最少。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "scheduling problem"
        }
    },
    {
        "concept_name": "谢尔排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "算法先将要排序的一组数按某个增量 d 分成若干组，每组中记录的下标相差 d ，对每组中全部元素进行排序，然后再用一个较小的增量对它在每组中再进行排序，当增量减到1时，整个要排序的数被分成一组，排序完成。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Shell sort"
        }
    },
    {
        "concept_name": "贝切尔比较器",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "实现“比较和条件交换”操作的一种逻辑单元。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Batcher comparator"
        }
    },
    {
        "concept_name": "贝尔曼-福特算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "由理查德·贝尔曼（Richard Bellman）和莱斯特·福特（Lester Ford）创立的，求解单源最短路径问题的一种算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Bellman-Ford's algorithm"
        }
    },
    {
        "concept_name": "贪婪算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "又称": " 贪心算法",
            "定义": "一种不追求全局最优解，只在每一步求得局部最优解的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "greedy algorithm"
        }
    },
    {
        "concept_name": "贪心选路算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "基于贪心策略的选路算法，每个信包企图沿着源-目的的最短路径抵达其目的地。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "greedy routing algorithm"
        }
    },
    {
        "concept_name": "超立方体链接",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "并行机中的一种互联方式，在 n维超立方体中，每个节点与n个节点相连，任意两个节点之间的路径长度不会超过n 。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "hypercube interconnection"
        }
    },
    {
        "concept_name": "输入规模",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "输入规模是指算法所接受的输入单位数据的个数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "input size"
        }
    },
    {
        "concept_name": "近似格式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一个最优化问题的近似格式是指带有近似相对误差界ε、0的一类近似算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "approximation scheme"
        }
    },
    {
        "concept_name": "近似算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "求解结果不一定是最优的，但是在可以承受的范围内，可以比精确求解消耗更少的资源的一类求解方法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "approximation algorithm"
        }
    },
    {
        "concept_name": "近似算法的性能比",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "若一个最优化问题的最优值为，求解该问题的一个近似算法求得的近似最优解相应的目标函数值为 c ，则将该近似算法的性能比定义为。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "performance ratio of an approximation algorithm"
        }
    },
    {
        "concept_name": "近似算法的相对误差",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "若对问题的输入规模 n ，有一函数ε( n )使得，则称ε( n )为该近似算法的相对误差界。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "relative error of an approximation algorithm"
        }
    },
    {
        "concept_name": "进程代数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "关于通信并发系统的代数理论的统称。这些代数理论都使用通信，而不是共享存储，作为进程之间相互作用的基本手段。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "process algebra"
        }
    },
    {
        "concept_name": "连通性",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定一个图 G，若对于G 中任意两个节点 s,t ，在 G 中有从 s 到 t 的路径，则称 G 是连通的。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "connectivity",
            "prerequisite": [
                "K_连通图_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "迪杰斯特拉算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种典型的单源最短路径算法，用于计算一个节点到其他所有节点的最短路径。主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Dijkstra's algorithm"
        }
    },
    {
        "concept_name": "选择排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "从序列头部开始逐步构建有序序列，对于未排序数据，逐个选择出其中最小者插入已排序序列的尾部。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "selection sort",
            "prerequisite": [
                "K_动态规划_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "选择网络",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "采用不同的拓扑链接的比较器所组成的实现选择功能的一种网络。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "selection network"
        }
    },
    {
        "concept_name": "递归算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "把问题分解为规模缩小了的同类问题的子问题，然后采用递归调用函数（或过程）来求得原问题的解。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "recursive algorithm"
        }
    },
    {
        "concept_name": "递推关系",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "给定一个数的序列 H(0),H(1),…,H(n),…,若存在整数,使得当n≥时,可以用等号（或大于号、小于号）将H(n)与前面的某些项H(i)(0≤i",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "recurrence relation"
        }
    },
    {
        "concept_name": "遗传优化算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种通过模拟自然进化过程搜索最优解的方法，对于一个最优化问题，该算法通过一定数量的候选解种群迭代地执行选择、交叉、变异、评价等操作使得种群向更好的解进化。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "genetic optimization algorithm"
        }
    },
    {
        "concept_name": "闭合式",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "如果一个表达式可以由有限个基本函数解析表达，则称为闭合式。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "closed form"
        }
    },
    {
        "concept_name": "随机增量构造",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种设计随机几何算法的方法，该方法以随机的顺序逐个考虑作为问题输入的 n 个物体，并计算增加一个物体对于解决问题的效果。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "randomized incremental construction"
        }
    },
    {
        "concept_name": "随机并行算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "允许每个处理机在单步内产生某一范围内的随机数作为参数来确定算法的下一步的并行算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "randomized parallel algorithm"
        }
    },
    {
        "concept_name": "随机游走",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "随机算法设计的一种方法。在该方法中，个体从图上随机选择的某个顶点出发，在图上进行游走。在此过程中，个体到达一个顶点后，在该顶点的邻接顶点中随机挑选一个，然后移到这个顶点。重复此过程，直到满足某个终止条件为止。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "random walk"
        }
    },
    {
        "concept_name": "随机选路算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种选路算法，在该算法中，每个信包在传递过程中，由一个节点随机地传向下一个节点，直至到达目的地。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "randomized routing algorithm"
        }
    },
    {
        "concept_name": "静态选路",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "一种选路方式。在该方式中，在选路开始时待选路的信包已经出现在网络中。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "static routing"
        }
    },
    {
        "concept_name": "预调度算法",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "按一定规则预先进行调度的算法。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "prescheduled algorithm"
        }
    },
    {
        "concept_name": "高性能计算",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_算法设计与分析",
            "定义": "通常指使用多台处理器组成的高性能计算系统所执行的计算。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "high performance computing"
        }
    }
]