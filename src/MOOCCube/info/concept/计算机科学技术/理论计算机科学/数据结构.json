[
    {
        "concept_name": "AOV网",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "以顶点表示活动，以有向边表示活动之间的优先关系的有向图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "activity on vertex network"
        }
    },
    {
        "concept_name": "B+树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "B树的一种变形树，应文件系统所需而衍生。B+树和B树的差异在于：①具有 n 棵子树的节点含 n 个键；②叶节点的全体包含了全部的键，以及指向含这些键的记录的指针，且诸叶节点之间依键的大小自小而大横向链接；③所有非叶节点形成索引，仅含其子树（根节点）中最大（或最小）的键。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "B+ tree"
        }
    },
    {
        "concept_name": "B树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "一种广泛应用于文件索引结构中的平衡的多路查找树。一棵 m阶B树或者是空树，或者满足下列性质：①根节点或为叶节点或至少有两棵子树；②除根节点以外的所有节点（不包括叶节点）至少有「m、2」棵子树；③每个节点至多有m棵子树；④所有的失败节点都位于同一层；⑤每个有n棵子树的节点都含有n-1 个数字键，用于分划各子树属下的（数字键或）数据记录。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "B tree"
        }
    },
    {
        "concept_name": "中序遍历",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "遍历二叉树的一种方式。其过程可以递归地表示为先中序遍历左子树，再访问根节点，最后中序遍历右子树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "inorder traversal"
        }
    },
    {
        "concept_name": "串",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "由零个或者多个字符组成的有限序列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "string"
        }
    },
    {
        "concept_name": "二叉查找树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " 二叉排序树",
            "定义": "节点带值的二叉树，它或者是空树，或者是满足以下性质的非空二叉树：①若它的左子树非空，则左子树上所有节点值均小于根节点值；②若它的右子树非空，则右子树上所有节点值均大于根节点值；③左、右子树本身各是一棵二叉查找树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binary search tree"
        }
    },
    {
        "concept_name": "二叉树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树的一种情况。可以递归地定义为：该树或者为空，或者是由一个根节点和最多两棵互不相交的称为左子树或右子树的二叉树组成。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binary tree"
        }
    },
    {
        "concept_name": "二叉链表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "二叉树的一种链式存储结构。每个节点除了存放节点值外，还有最多左、右两个指针，分别指向左、右孩子节点。当一个指针指向的孩子节点不存在时，用空值表示。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "binary linked list"
        }
    },
    {
        "concept_name": "优先队列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "优先队列是不同于先进先出队列的另一种队列，每次从队列中取出的是具有最高优先权的元素。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "priority queue"
        }
    },
    {
        "concept_name": "兄弟",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树中同一双亲的孩子之间互称兄弟。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sibling"
        }
    },
    {
        "concept_name": "先进先出",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "英文": "first in first out ;FIFO",
            "定义": "队列的存取规则，最先加入到队列中的元素会首先被取出，最后加入到队列的元素会最后被取出。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "first in first out"
        }
    },
    {
        "concept_name": "入度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在有向图中，以一个顶点为弧尾的弧的数目。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "in-degree",
            "prerequisite": [
                "K_图的遍历_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "关节点",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在某图中，若删除顶点 v以及v相关的边后，图的一个连通分量分割为两个或两个以上的连通分量，则顶点v 为该图的一个关节点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "articulation point"
        }
    },
    {
        "concept_name": "关键路径",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在AOE网中，从源点到汇点最长的路径。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "critical path"
        }
    },
    {
        "concept_name": "内排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "将参加排序的数据元素一次全部存放在计算机内存中进行的排序过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "internal sort"
        }
    },
    {
        "concept_name": "出度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在有向图中，以一个顶点为弧头的弧的数目。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "out-degree"
        }
    },
    {
        "concept_name": "前序遍历",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "遍历二叉树的一种方式。其过程可以递归地表示为先访问根节点，再前序遍历左子树，最后前序遍历右子树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "preorder traversal"
        }
    },
    {
        "concept_name": "单链表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "每个节点中只设置一个指向该节点后继的指针域的链表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "single linked list"
        }
    },
    {
        "concept_name": "双亲",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树中每个节点称为它的孩子的双亲。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "parent"
        }
    },
    {
        "concept_name": "双向链表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "简称": " 双链表",
            "定义": "每个节点中都设置分别指向该节点的后继和前驱两个指针域的链表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "doubly linked list"
        }
    },
    {
        "concept_name": "双端队列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "可以在其两端进行插入和删除操作的队列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "double-ended queue"
        }
    },
    {
        "concept_name": "叶节点",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " 叶结点",
            "定义": "树中度为零的节点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "leaf node",
            "prerequisite": [
                "K_后序遍历_计算机科学技术",
                "K_B+树_计算机科学技术",
                "K_四叉树_计算机科学技术",
                "K_兄弟_计算机科学技术",
                "K_孩子_计算机科学技术",
                "K_孩子_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "后序遍历",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "遍历二叉树的一种方式。其过程可以递归地表示为先后序遍历左子树，再后序遍历右子树，最后访问根节点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "postorder traversal"
        }
    },
    {
        "concept_name": "后进先出",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "英文": "last in first out ;LIFO",
            "定义": "栈的存取规则，最后加入到栈中的元素首先被取出，最先加入到栈中的元素最后被取出。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "last in first out",
            "prerequisite": [
                "K_栈顶_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "哈夫曼树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在以 n 个权值作为叶子节点的二叉树中，带权路径长度最小的二叉树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "Huffman tree"
        }
    },
    {
        "concept_name": "哈希函数",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " 散列函数",
            "定义": "将哈希表中元素的关键键值映射为元素存储位置的函数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "hash function",
            "prerequisite": [
                "K_查询表达式_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "哈希表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " 散列表",
            "定义": "根据关键键值（key value）而直接进行访问的数据结构。通过把关键键值映射到表中一个位置来访问记录，以加快查找速度。存放记录的数组称作哈希表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "hash table"
        }
    },
    {
        "concept_name": "图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "由顶点的有限集和边的有限集组成的数据结构。图的有向边也称为弧。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "graph"
        }
    },
    {
        "concept_name": "图中顶点的度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "依附于某个顶点的边的数目。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "degree of vertex in graph"
        }
    },
    {
        "concept_name": "图的遍历",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "从图中某一顶点出发，按某种方式访问图中所有顶点，使每一顶点仅被访问一次。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "traversal of graph",
            "prerequisite": [
                "K_广度优先搜索_计算机科学技术",
                "K_连接点_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "堆",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "一棵完全二叉树，其每个节点都有一个值。特点是根节点值最小（或最大），且根节点的两个子树也是一个堆。根节点值最小的堆称为小根堆，根节点值最大的堆称为大根堆。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "heap"
        }
    },
    {
        "concept_name": "外排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "由于参加排序的数据量很大，以至不能一次将全部数据存放在计算机内存中，因而需要进行内、外存数据交换的排序过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "external sort"
        }
    },
    {
        "concept_name": "子串",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "串中任意个位置连续的字符组成的序列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "substring",
            "prerequisite": [
                "K_空串_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "子图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "对于图 G=（V,E）与G′=（V′,E′），若V′∈V，且E′∈E，则称G′为G 的一个子图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "subgraph"
        }
    },
    {
        "concept_name": "子孙",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树或子树中所有非根节点称为根节点的子孙。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "descendants"
        }
    },
    {
        "concept_name": "孩子",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树中某节点的子树的根为该节点的孩子。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "children",
            "prerequisite": [
                "K_出度_计算机科学技术",
                "K_后序遍历_计算机科学技术",
                "K_中序遍历_计算机科学技术",
                "K_中序遍历_计算机科学技术",
                "K_后序遍历_计算机科学技术",
                "K_兄弟_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "完全二叉树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "若设二叉树的高度为 h，除第 h 层外，其他各层（1～h -1）的节点数都达到最大个数，第 h 层所有的节点都连续集中在最左边。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "complete binary tree"
        }
    },
    {
        "concept_name": "完全图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "每对顶点之间都有一条边的图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "complete graph"
        }
    },
    {
        "concept_name": "层次遍历",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "遍历二叉树的一种方式。其过程是先访问根节点，然后按从上层到下层，每一层从左到右的顺序访问二叉树中所有节点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "level traversal",
            "prerequisite": [
                "K_广度优先搜索_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "平衡二叉树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " AVL树",
            "定义": "一种二叉查找树，具有以下性质：一棵空树，或者它的左右两个子树的高度差的绝对值不超过1，并且左、右两个子树都是一棵平衡二叉树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "balanced binary tree"
        }
    },
    {
        "concept_name": "广度优先搜索",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "从图中某一顶点 v出发，先访问v，接着访问v的所有未被访问过的邻接点，然后按照的顺序访问它们的所有未被访问过的相邻点，直到图中所有的顶点都被访问。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "breadth first search"
        }
    },
    {
        "concept_name": "强连通分量",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "有向图的极大强连通子图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "strongly connected component"
        }
    },
    {
        "concept_name": "强连通图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "任意两个顶点都有路径相通的有向图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "strongly connected graph"
        }
    },
    {
        "concept_name": "拓扑序列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在一个含有 n个顶点的有向无环图中，顶点序列称为拓扑序列，当且仅当该序列满足条件：若、,、是图中的边，则该序列中顶点必须排在顶点之前。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "topological sequence"
        }
    },
    {
        "concept_name": "排序",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "将一组数据元素按某种顺序排列的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sorting",
            "prerequisite": [
                "K_查询优化_计算机科学技术",
                "K_二路归并_计算机科学技术",
                "K_选择排序_计算机科学技术",
                "K_选择排序_计算机科学技术",
                "K_插入排序_计算机科学技术",
                "K_插入排序_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "数据",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "客观事物的符号表示。在计算机科学中，指所有能输入到计算机中并被计算机程序处理的符号的总称。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data"
        }
    },
    {
        "concept_name": "数据元素",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "数据的基本单位。在计算机程序中通常作为一个整体进行考虑和处理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data element"
        }
    },
    {
        "concept_name": "数据对象",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "具有某种特定属性的数据元素。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data object",
            "prerequisite": [
                "K_外模式_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "数据结构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "组织数据的某种特定的方式，便于由计算机高效处理。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data structure",
            "prerequisite": [
                "K_向量_计算机科学技术",
                "K_无向图_计算机科学技术",
                "K_向量_计算机科学技术",
                "K_邻接矩阵_计算机科学技术",
                "K_算法_计算机科学技术",
                "K_分治_计算机科学技术",
                "K_传递函数_计算机科学技术",
                "K_深度优先搜索_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "数据项",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "数据的不可分割的最小单位。一个数据元素可以由若干个数据项组成。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "data item"
        }
    },
    {
        "concept_name": "数组",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "其元素可以通过下标直接选取的线性表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "array",
            "prerequisite": [
                "K_空串_计算机科学技术",
                "K_层次遍历_计算机科学技术",
                "K_队列_计算机科学技术",
                "K_向量_计算机科学技术",
                "K_哈希函数_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "无向图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "每条边都是由两个顶点组成无序偶对的图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "undirected graph"
        }
    },
    {
        "concept_name": "最小生成树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "对于带权连通图，边上权值之和最小的生成树。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "minimal spanning tree"
        }
    },
    {
        "concept_name": "最短路径",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "图中从一个顶点到另一个顶点之间路径长度之和最小的路径。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "shortest path"
        }
    },
    {
        "concept_name": "有向图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "每条边都是由两个顶点组成有序偶对的图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "directed graph"
        }
    },
    {
        "concept_name": "有向无环图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "不含有从某一顶点开始而又返回到同一个顶点的路径的有向图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "directed acyclic graph"
        }
    },
    {
        "concept_name": "有序表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "数据元素按元素值大小顺序排列的线性表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "ordered list"
        }
    },
    {
        "concept_name": "查找",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "根据给定的某个关键字值 k，在查找表中确定一个其关键字值与k 相匹配的元素的过程。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "searching",
            "prerequisite": [
                "K_选择排序_计算机科学技术",
                "K_平均查找长度_计算机科学技术",
                "K_平均查找长度_计算机科学技术",
                "K_插入排序_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "查找表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "支持查找操作的表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "search table"
        }
    },
    {
        "concept_name": "栈",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "只在表的同一端进行插入或删除操作的线性表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "stack"
        }
    },
    {
        "concept_name": "栈底",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "栈结构中，相对于栈顶的另一端，即不进行插入或删除操作的端。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "stack bottom",
            "prerequisite": [
                "K_中序遍历_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "栈顶",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "栈结构中，进行插入或删除操作的端。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "stack top",
            "prerequisite": [
                "K_空栈_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": " n（n≥0）个节点的有限集。在任意一棵非空树中，有且仅有一个特定的称为根的节点；当n、1时，其余节点可分为m（m、0） 个互不相交的有限集，其中每个集合本身又是一棵树，并且称为根的子树。树中节点构成一种层次关系。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "tree"
        }
    },
    {
        "concept_name": "树中节点的层次",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "从根开始定义起，根为第零层，根的孩子为第一层，依此类推。若一个节点的双亲的层次为 l ，则该节点的层次为 l +1。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "level of node in tree"
        }
    },
    {
        "concept_name": "树中节点的度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树中一个节点的孩子节点的个数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "degree of node in tree"
        }
    },
    {
        "concept_name": "树的带权路径长度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树中所有叶子节点的带权路径长度之和。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "weighted path length of tree"
        }
    },
    {
        "concept_name": "树的深度或高度",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "树中节点的最大层次数。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "depth or height"
        }
    },
    {
        "concept_name": "森林",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": " n（n 、0）个互不相交的树的集合。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "forest"
        }
    },
    {
        "concept_name": "深度优先搜索",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "从图中某一指定顶点 v出发，先访问v，接着选择一个与顶点v相邻且没有访问过的顶点w，再从w出发采用同样的方式访问w的未被访问过的相邻点，直到图中与顶点v 相连的所有顶点都被访问为止。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "depth first search"
        }
    },
    {
        "concept_name": "满二叉树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "二叉树的一种特殊情况。除叶节点外的所有节点均有两个子节点，而且所有叶节点都在同一层。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "full binary tree"
        }
    },
    {
        "concept_name": "物理结构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " 映像;存储结构",
            "定义": "数据结构在计算机存储器中的表示。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "physical structure",
            "prerequisite": [
                "K_非屏蔽双绞线_计算机科学技术",
                "K_以太网_计算机科学技术",
                "K_先进先出_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "环状链表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "一种首尾相接的链表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "circular linked list"
        }
    },
    {
        "concept_name": "环状队列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "队列的一种存储结构，其队首和队尾相接。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "circular queue"
        }
    },
    {
        "concept_name": "生成树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "一个连通图的极小连通子图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "spanning tree"
        }
    },
    {
        "concept_name": "祖先",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "从树中根节点到达某节点的路径上经过的所有节点为该节点的祖先（不含该节点本身）。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "ancestors",
            "prerequisite": [
                "K_森林_计算机科学技术",
                "K_中序遍历_计算机科学技术",
                "K_中序遍历_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "索引存储",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在存储数据节点信息的同时，还建有附加的索引表，索引表中每一项称为索引项，通常为（关键字，地址），其中关键字标识一个节点，地址为指向该节点的指针。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "index storage"
        }
    },
    {
        "concept_name": "线性结构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "一种由有限个数据元素组成的结构，具有四个基本特征：①必存在唯一的一个开始元素；②必存在唯一的一个终端元素；③除终端元素外，其他数据元素均有唯一的后继元素；④除开始元素外，其他数据元素均有唯一的前驱元素。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linear structure"
        }
    },
    {
        "concept_name": "线性表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "同一类型数据元素组成的有限序列，仅有唯一的开始元素（它没有前驱元素）和终端元素（它没有后继元素），除此之外，每个元素仅有唯一的前驱元素和唯一的后继元素。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linear list",
            "prerequisite": [
                "K_先进先出_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "线索二叉树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "加入线索的二叉树。线索是指利用二叉树的二叉链表中空的左（或右）指针域存放指向节点前驱（或后继）的指针。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "threaded binary tree"
        }
    },
    {
        "concept_name": "节点",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "又称": " 结点",
            "定义": "在数据结构的图形表示中代表数据元素的连接点或端点。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "node"
        }
    },
    {
        "concept_name": "虚顺串",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "长度为0的顺串。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "dummy run"
        }
    },
    {
        "concept_name": "连通分量",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "无向图中的极大连通子图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "connected component"
        }
    },
    {
        "concept_name": "连通图",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "任意两个顶点都有路径相通的无向图。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "connected graph",
            "prerequisite": [
                "K_孩子_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "逻辑结构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "数据元素之间存在的逻辑关系。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "logical structure"
        }
    },
    {
        "concept_name": "遍历二叉树",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "按照一定的规则或次序访问二叉树中所有节点，使得每个节点仅被访问一次。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "traversing binary tree"
        }
    },
    {
        "concept_name": "邻接矩阵",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "图的一种存储方法，用一个矩阵存储顶点的信息与顶点之间关系（边或弧）的信息。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "adjacency matrix"
        }
    },
    {
        "concept_name": "邻接表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "图的一种存储方法，图中每一个顶点对应一个单链表，链表中的一个节点包含了与该顶点邻接的另一个顶点构成的一条边的信息。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "adjacency list",
            "prerequisite": [
                "K_入度_计算机科学技术",
                "K_广度优先搜索_计算机科学技术",
                "K_出度_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "链串",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用链式存储结构的串。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linked string"
        }
    },
    {
        "concept_name": "链式存储",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在计算机存储器中用任意地址的存储单元存放数据元素，数据元素之间的逻辑关系以指针连接的方式实现。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linked storage"
        }
    },
    {
        "concept_name": "链式队列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用链式存储结构的队列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linked queue"
        }
    },
    {
        "concept_name": "链栈",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用链式存储结构的栈。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linked stack"
        }
    },
    {
        "concept_name": "链表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用链式存储方式的线性表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "linked list"
        }
    },
    {
        "concept_name": "队列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "只在表的一端进行插入操作，而在另一端进行删除操作的线性表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "queue",
            "prerequisite": [
                "K_路由信息协议_计算机科学技术",
                "K_图的遍历_计算机科学技术",
                "K_队头_计算机科学技术",
                "K_队尾_计算机科学技术",
                "K_队头_计算机科学技术",
                "K_队头_计算机科学技术",
                "K_队尾_计算机科学技术",
                "K_先进先出_计算机科学技术",
                "K_先进先出_计算机科学技术",
                "K_层次遍历_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "队头",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "队列中进行插入操作（进队）的端。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "front",
            "prerequisite": [
                "K_先进先出_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "队尾",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "队列中进行删除操作（出队）的端。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "rear"
        }
    },
    {
        "concept_name": "非线性结构",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "不符合线性结构特征的数据结构。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "non-linear structure",
            "prerequisite": [
                "K_层次遍历_计算机科学技术",
                "K_广度优先搜索_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "顺串",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "外排序中每组排序好的初始归并段。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "run"
        }
    },
    {
        "concept_name": "顺序串",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用顺序存储结构的串。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential string"
        }
    },
    {
        "concept_name": "顺序存储",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "在计算机存储器中用一片地址连续的存储单元依次存放数据元素。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential storage",
            "prerequisite": [
                "K_存取时间_计算机科学技术",
                "K_直接存取_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "顺序查找",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "从查找表的第一个元素开始，逐个进行元素的关键字值与给定值的比较，若某个元素的关键字值和给定值相等，则查找成功；反之，直至最后一个元素，其关键字值和给定值比较都不相等，则查找失败。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential search",
            "prerequisite": [
                "K_平均查找长度_计算机科学技术",
                "K_广度优先搜索_计算机科学技术"
            ]
        }
    },
    {
        "concept_name": "顺序栈",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用顺序存储结构的栈。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential stack"
        }
    },
    {
        "concept_name": "顺序表",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用顺序存储方式的线性表。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential list"
        }
    },
    {
        "concept_name": "顺序队列",
        "details": {
            "学科": "计算机科学技术_理论计算机科学_数据结构",
            "定义": "采用顺序存储结构的队列。",
            "见载": "《计算机科学技术名词 》第三版",
            "英文名": "sequential queue"
        }
    }
]